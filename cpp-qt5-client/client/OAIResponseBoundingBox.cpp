/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseBoundingBox.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseBoundingBox::OAIResponseBoundingBox(QString json) {
    this->init();
    this->fromJson(json);
}

OAIResponseBoundingBox::OAIResponseBoundingBox() {
    this->init();
}

OAIResponseBoundingBox::~OAIResponseBoundingBox() {

}

void
OAIResponseBoundingBox::init() {
    
    m_envelope_isSet = false;
    m_envelope_isValid = false;
    
    m_boxes_isSet = false;
    m_boxes_isValid = false;
    }

void
OAIResponseBoundingBox::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIResponseBoundingBox::fromJsonObject(QJsonObject json) {
    
    m_envelope_isValid = ::OpenAPI::fromJsonValue(envelope, json[QString("envelope")]);
    
    
    
    m_boxes_isValid = ::OpenAPI::fromJsonValue(boxes, json[QString("boxes")]);
    
}

QString
OAIResponseBoundingBox::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseBoundingBox::asJsonObject() const {
    QJsonObject obj;
	if(envelope.isSet()){
        obj.insert(QString("envelope"), ::OpenAPI::toJsonValue(envelope));
    }
	
    if(boxes.size() > 0){
        obj.insert(QString("boxes"), ::OpenAPI::toJsonValue(boxes));
    } 
    return obj;
}


OAIResponseBox
OAIResponseBoundingBox::getEnvelope() const {
    return envelope;
}
void
OAIResponseBoundingBox::setEnvelope(const OAIResponseBox &envelope) {
    this->envelope = envelope;
    this->m_envelope_isSet = true;
}


QList<OAIResponseBox>
OAIResponseBoundingBox::getBoxes() const {
    return boxes;
}
void
OAIResponseBoundingBox::setBoxes(const QList<OAIResponseBox> &boxes) {
    this->boxes = boxes;
    this->m_boxes_isSet = true;
}

bool
OAIResponseBoundingBox::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(envelope.isSet()){ isObjectUpdated = true; break;}
    
        if(boxes.size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIResponseBoundingBox::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_envelope_isValid && m_boxes_isValid && true;
}

}

