/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseRoute.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseRoute::OAIResponseRoute(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseRoute::OAIResponseRoute() {
    init();
}

OAIResponseRoute::~OAIResponseRoute() {
    this->cleanup();
}

void
OAIResponseRoute::init() {
    departure_time = NULL;
    m_departure_time_isSet = false;
    arrival_time = NULL;
    m_arrival_time_isSet = false;
    parts = new QList<OAIResponseRoutePart*>();
    m_parts_isSet = false;
}

void
OAIResponseRoute::cleanup() {
    if(departure_time != nullptr) { 
        delete departure_time;
    }
    if(arrival_time != nullptr) { 
        delete arrival_time;
    }
    if(parts != nullptr) { 
        auto arr = parts;
        for(auto o: *arr) { 
            delete o;
        }
        delete parts;
    }
}

OAIResponseRoute*
OAIResponseRoute::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseRoute::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&departure_time, pJson["departure_time"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&arrival_time, pJson["arrival_time"], "QDateTime", "QDateTime");
    
    
    ::OpenAPI::setValue(&parts, pJson["parts"], "QList", "OAIResponseRoutePart");
}

QString
OAIResponseRoute::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseRoute::asJsonObject() {
    QJsonObject obj;
    if(departure_time != nullptr) { 
        toJsonValue(QString("departure_time"), departure_time, obj, QString("QDateTime"));
    }
    if(arrival_time != nullptr) { 
        toJsonValue(QString("arrival_time"), arrival_time, obj, QString("QDateTime"));
    }
    if(parts->size() > 0){
        toJsonArray((QList<void*>*)parts, obj, "parts", "OAIResponseRoutePart");
    }

    return obj;
}

QDateTime*
OAIResponseRoute::getDepartureTime() {
    return departure_time;
}
void
OAIResponseRoute::setDepartureTime(QDateTime* departure_time) {
    this->departure_time = departure_time;
    this->m_departure_time_isSet = true;
}

QDateTime*
OAIResponseRoute::getArrivalTime() {
    return arrival_time;
}
void
OAIResponseRoute::setArrivalTime(QDateTime* arrival_time) {
    this->arrival_time = arrival_time;
    this->m_arrival_time_isSet = true;
}

QList<OAIResponseRoutePart*>*
OAIResponseRoute::getParts() {
    return parts;
}
void
OAIResponseRoute::setParts(QList<OAIResponseRoutePart*>* parts) {
    this->parts = parts;
    this->m_parts_isSet = true;
}


bool
OAIResponseRoute::isSet(){
    bool isObjectUpdated = false;
    do{
        if(parts->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

