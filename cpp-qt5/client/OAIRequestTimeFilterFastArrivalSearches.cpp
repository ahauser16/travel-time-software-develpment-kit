/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRequestTimeFilterFastArrivalSearches.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRequestTimeFilterFastArrivalSearches::OAIRequestTimeFilterFastArrivalSearches(QString json) {
    init();
    this->fromJson(json);
}

OAIRequestTimeFilterFastArrivalSearches::OAIRequestTimeFilterFastArrivalSearches() {
    init();
}

OAIRequestTimeFilterFastArrivalSearches::~OAIRequestTimeFilterFastArrivalSearches() {
    this->cleanup();
}

void
OAIRequestTimeFilterFastArrivalSearches::init() {
    many_to_one = new QList<OAIRequestTimeFilterFastArrivalManyToOneSearch*>();
    m_many_to_one_isSet = false;
    one_to_many = new QList<OAIRequestTimeFilterFastArrivalOneToManySearch*>();
    m_one_to_many_isSet = false;
}

void
OAIRequestTimeFilterFastArrivalSearches::cleanup() {
    if(many_to_one != nullptr) { 
        auto arr = many_to_one;
        for(auto o: *arr) { 
            delete o;
        }
        delete many_to_one;
    }
    if(one_to_many != nullptr) { 
        auto arr = one_to_many;
        for(auto o: *arr) { 
            delete o;
        }
        delete one_to_many;
    }
}

OAIRequestTimeFilterFastArrivalSearches*
OAIRequestTimeFilterFastArrivalSearches::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIRequestTimeFilterFastArrivalSearches::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&many_to_one, pJson["many_to_one"], "QList", "OAIRequestTimeFilterFastArrivalManyToOneSearch");
    
    ::OpenAPI::setValue(&one_to_many, pJson["one_to_many"], "QList", "OAIRequestTimeFilterFastArrivalOneToManySearch");
}

QString
OAIRequestTimeFilterFastArrivalSearches::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRequestTimeFilterFastArrivalSearches::asJsonObject() {
    QJsonObject obj;
    if(many_to_one->size() > 0){
        toJsonArray((QList<void*>*)many_to_one, obj, "many_to_one", "OAIRequestTimeFilterFastArrivalManyToOneSearch");
    }
    if(one_to_many->size() > 0){
        toJsonArray((QList<void*>*)one_to_many, obj, "one_to_many", "OAIRequestTimeFilterFastArrivalOneToManySearch");
    }

    return obj;
}

QList<OAIRequestTimeFilterFastArrivalManyToOneSearch*>*
OAIRequestTimeFilterFastArrivalSearches::getManyToOne() {
    return many_to_one;
}
void
OAIRequestTimeFilterFastArrivalSearches::setManyToOne(QList<OAIRequestTimeFilterFastArrivalManyToOneSearch*>* many_to_one) {
    this->many_to_one = many_to_one;
    this->m_many_to_one_isSet = true;
}

QList<OAIRequestTimeFilterFastArrivalOneToManySearch*>*
OAIRequestTimeFilterFastArrivalSearches::getOneToMany() {
    return one_to_many;
}
void
OAIRequestTimeFilterFastArrivalSearches::setOneToMany(QList<OAIRequestTimeFilterFastArrivalOneToManySearch*>* one_to_many) {
    this->one_to_many = one_to_many;
    this->m_one_to_many_isSet = true;
}


bool
OAIRequestTimeFilterFastArrivalSearches::isSet(){
    bool isObjectUpdated = false;
    do{
        if(many_to_one->size() > 0){ isObjectUpdated = true; break;}
        if(one_to_many->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

