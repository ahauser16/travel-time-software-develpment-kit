/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRequestRangeFull.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRequestRangeFull::OAIRequestRangeFull(QString json) {
    init();
    this->fromJson(json);
}

OAIRequestRangeFull::OAIRequestRangeFull() {
    init();
}

OAIRequestRangeFull::~OAIRequestRangeFull() {
    this->cleanup();
}

void
OAIRequestRangeFull::init() {
    enabled = false;
    m_enabled_isSet = false;
    max_results = 0;
    m_max_results_isSet = false;
    width = 0;
    m_width_isSet = false;
}

void
OAIRequestRangeFull::cleanup() {



}

OAIRequestRangeFull*
OAIRequestRangeFull::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIRequestRangeFull::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&enabled, pJson["enabled"], "bool", "");
    
    ::OpenAPI::setValue(&max_results, pJson["max_results"], "qint32", "");
    
    ::OpenAPI::setValue(&width, pJson["width"], "qint32", "");
    
}

QString
OAIRequestRangeFull::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRequestRangeFull::asJsonObject() {
    QJsonObject obj;
    if(m_enabled_isSet){
        obj.insert("enabled", QJsonValue(enabled));
    }
    if(m_max_results_isSet){
        obj.insert("max_results", QJsonValue(max_results));
    }
    if(m_width_isSet){
        obj.insert("width", QJsonValue(width));
    }

    return obj;
}

bool
OAIRequestRangeFull::isEnabled() {
    return enabled;
}
void
OAIRequestRangeFull::setEnabled(bool enabled) {
    this->enabled = enabled;
    this->m_enabled_isSet = true;
}

qint32
OAIRequestRangeFull::getMaxResults() {
    return max_results;
}
void
OAIRequestRangeFull::setMaxResults(qint32 max_results) {
    this->max_results = max_results;
    this->m_max_results_isSet = true;
}

qint32
OAIRequestRangeFull::getWidth() {
    return width;
}
void
OAIRequestRangeFull::setWidth(qint32 width) {
    this->width = width;
    this->m_width_isSet = true;
}


bool
OAIRequestRangeFull::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_enabled_isSet){ isObjectUpdated = true; break;}
        if(m_max_results_isSet){ isObjectUpdated = true; break;}
        if(m_width_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

