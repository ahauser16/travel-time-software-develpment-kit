/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRequestTransportation.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRequestTransportation::OAIRequestTransportation(QString json) {
    init();
    this->fromJson(json);
}

OAIRequestTransportation::OAIRequestTransportation() {
    init();
}

OAIRequestTransportation::~OAIRequestTransportation() {
    this->cleanup();
}

void
OAIRequestTransportation::init() {
    type = new QString("");
    m_type_isSet = false;
    pt_change_delay = 0;
    m_pt_change_delay_isSet = false;
    walking_time = 0;
    m_walking_time_isSet = false;
    driving_time_to_station = 0;
    m_driving_time_to_station_isSet = false;
    parking_time = 0;
    m_parking_time_isSet = false;
    boarding_time = 0;
    m_boarding_time_isSet = false;
}

void
OAIRequestTransportation::cleanup() {
    if(type != nullptr) { 
        delete type;
    }





}

OAIRequestTransportation*
OAIRequestTransportation::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIRequestTransportation::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&type, pJson["type"], "QString", "QString");
    
    ::OpenAPI::setValue(&pt_change_delay, pJson["pt_change_delay"], "qint32", "");
    
    ::OpenAPI::setValue(&walking_time, pJson["walking_time"], "qint32", "");
    
    ::OpenAPI::setValue(&driving_time_to_station, pJson["driving_time_to_station"], "qint32", "");
    
    ::OpenAPI::setValue(&parking_time, pJson["parking_time"], "qint32", "");
    
    ::OpenAPI::setValue(&boarding_time, pJson["boarding_time"], "qint32", "");
    
}

QString
OAIRequestTransportation::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRequestTransportation::asJsonObject() {
    QJsonObject obj;
    if(type != nullptr && *type != QString("")){
        toJsonValue(QString("type"), type, obj, QString("QString"));
    }
    if(m_pt_change_delay_isSet){
        obj.insert("pt_change_delay", QJsonValue(pt_change_delay));
    }
    if(m_walking_time_isSet){
        obj.insert("walking_time", QJsonValue(walking_time));
    }
    if(m_driving_time_to_station_isSet){
        obj.insert("driving_time_to_station", QJsonValue(driving_time_to_station));
    }
    if(m_parking_time_isSet){
        obj.insert("parking_time", QJsonValue(parking_time));
    }
    if(m_boarding_time_isSet){
        obj.insert("boarding_time", QJsonValue(boarding_time));
    }

    return obj;
}

QString*
OAIRequestTransportation::getType() {
    return type;
}
void
OAIRequestTransportation::setType(QString* type) {
    this->type = type;
    this->m_type_isSet = true;
}

qint32
OAIRequestTransportation::getPtChangeDelay() {
    return pt_change_delay;
}
void
OAIRequestTransportation::setPtChangeDelay(qint32 pt_change_delay) {
    this->pt_change_delay = pt_change_delay;
    this->m_pt_change_delay_isSet = true;
}

qint32
OAIRequestTransportation::getWalkingTime() {
    return walking_time;
}
void
OAIRequestTransportation::setWalkingTime(qint32 walking_time) {
    this->walking_time = walking_time;
    this->m_walking_time_isSet = true;
}

qint32
OAIRequestTransportation::getDrivingTimeToStation() {
    return driving_time_to_station;
}
void
OAIRequestTransportation::setDrivingTimeToStation(qint32 driving_time_to_station) {
    this->driving_time_to_station = driving_time_to_station;
    this->m_driving_time_to_station_isSet = true;
}

qint32
OAIRequestTransportation::getParkingTime() {
    return parking_time;
}
void
OAIRequestTransportation::setParkingTime(qint32 parking_time) {
    this->parking_time = parking_time;
    this->m_parking_time_isSet = true;
}

qint32
OAIRequestTransportation::getBoardingTime() {
    return boarding_time;
}
void
OAIRequestTransportation::setBoardingTime(qint32 boarding_time) {
    this->boarding_time = boarding_time;
    this->m_boarding_time_isSet = true;
}


bool
OAIRequestTransportation::isSet(){
    bool isObjectUpdated = false;
    do{
        if(type != nullptr && *type != QString("")){ isObjectUpdated = true; break;}
        if(m_pt_change_delay_isSet){ isObjectUpdated = true; break;}
        if(m_walking_time_isSet){ isObjectUpdated = true; break;}
        if(m_driving_time_to_station_isSet){ isObjectUpdated = true; break;}
        if(m_parking_time_isSet){ isObjectUpdated = true; break;}
        if(m_boarding_time_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

