/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseTimeFilterPostcodeDistrictProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseTimeFilterPostcodeDistrictProperties::OAIResponseTimeFilterPostcodeDistrictProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseTimeFilterPostcodeDistrictProperties::OAIResponseTimeFilterPostcodeDistrictProperties() {
    init();
}

OAIResponseTimeFilterPostcodeDistrictProperties::~OAIResponseTimeFilterPostcodeDistrictProperties() {
    this->cleanup();
}

void
OAIResponseTimeFilterPostcodeDistrictProperties::init() {
    travel_time_reachable = new OAIResponseTravelTimeStatistics();
    m_travel_time_reachable_isSet = false;
    travel_time_all = new OAIResponseTravelTimeStatistics();
    m_travel_time_all_isSet = false;
    coverage = 0.0;
    m_coverage_isSet = false;
}

void
OAIResponseTimeFilterPostcodeDistrictProperties::cleanup() {
    if(travel_time_reachable != nullptr) { 
        delete travel_time_reachable;
    }
    if(travel_time_all != nullptr) { 
        delete travel_time_all;
    }

}

OAIResponseTimeFilterPostcodeDistrictProperties*
OAIResponseTimeFilterPostcodeDistrictProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseTimeFilterPostcodeDistrictProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&travel_time_reachable, pJson["travel_time_reachable"], "OAIResponseTravelTimeStatistics", "OAIResponseTravelTimeStatistics");
    
    ::OpenAPI::setValue(&travel_time_all, pJson["travel_time_all"], "OAIResponseTravelTimeStatistics", "OAIResponseTravelTimeStatistics");
    
    ::OpenAPI::setValue(&coverage, pJson["coverage"], "double", "");
    
}

QString
OAIResponseTimeFilterPostcodeDistrictProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseTimeFilterPostcodeDistrictProperties::asJsonObject() {
    QJsonObject obj;
    if((travel_time_reachable != nullptr) && (travel_time_reachable->isSet())){
        toJsonValue(QString("travel_time_reachable"), travel_time_reachable, obj, QString("OAIResponseTravelTimeStatistics"));
    }
    if((travel_time_all != nullptr) && (travel_time_all->isSet())){
        toJsonValue(QString("travel_time_all"), travel_time_all, obj, QString("OAIResponseTravelTimeStatistics"));
    }
    if(m_coverage_isSet){
        obj.insert("coverage", QJsonValue(coverage));
    }

    return obj;
}

OAIResponseTravelTimeStatistics*
OAIResponseTimeFilterPostcodeDistrictProperties::getTravelTimeReachable() {
    return travel_time_reachable;
}
void
OAIResponseTimeFilterPostcodeDistrictProperties::setTravelTimeReachable(OAIResponseTravelTimeStatistics* travel_time_reachable) {
    this->travel_time_reachable = travel_time_reachable;
    this->m_travel_time_reachable_isSet = true;
}

OAIResponseTravelTimeStatistics*
OAIResponseTimeFilterPostcodeDistrictProperties::getTravelTimeAll() {
    return travel_time_all;
}
void
OAIResponseTimeFilterPostcodeDistrictProperties::setTravelTimeAll(OAIResponseTravelTimeStatistics* travel_time_all) {
    this->travel_time_all = travel_time_all;
    this->m_travel_time_all_isSet = true;
}

double
OAIResponseTimeFilterPostcodeDistrictProperties::getCoverage() {
    return coverage;
}
void
OAIResponseTimeFilterPostcodeDistrictProperties::setCoverage(double coverage) {
    this->coverage = coverage;
    this->m_coverage_isSet = true;
}


bool
OAIResponseTimeFilterPostcodeDistrictProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(travel_time_reachable != nullptr && travel_time_reachable->isSet()){ isObjectUpdated = true; break;}
        if(travel_time_all != nullptr && travel_time_all->isSet()){ isObjectUpdated = true; break;}
        if(m_coverage_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

