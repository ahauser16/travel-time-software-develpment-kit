/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseBoundingBox.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseBoundingBox::OAIResponseBoundingBox(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseBoundingBox::OAIResponseBoundingBox() {
    init();
}

OAIResponseBoundingBox::~OAIResponseBoundingBox() {
    this->cleanup();
}

void
OAIResponseBoundingBox::init() {
    envelope = new OAIResponseBox();
    m_envelope_isSet = false;
    boxes = new QList<OAIResponseBox*>();
    m_boxes_isSet = false;
}

void
OAIResponseBoundingBox::cleanup() {
    if(envelope != nullptr) { 
        delete envelope;
    }
    if(boxes != nullptr) { 
        auto arr = boxes;
        for(auto o: *arr) { 
            delete o;
        }
        delete boxes;
    }
}

OAIResponseBoundingBox*
OAIResponseBoundingBox::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseBoundingBox::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&envelope, pJson["envelope"], "OAIResponseBox", "OAIResponseBox");
    
    
    ::OpenAPI::setValue(&boxes, pJson["boxes"], "QList", "OAIResponseBox");
}

QString
OAIResponseBoundingBox::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseBoundingBox::asJsonObject() {
    QJsonObject obj;
    if((envelope != nullptr) && (envelope->isSet())){
        toJsonValue(QString("envelope"), envelope, obj, QString("OAIResponseBox"));
    }
    if(boxes->size() > 0){
        toJsonArray((QList<void*>*)boxes, obj, "boxes", "OAIResponseBox");
    }

    return obj;
}

OAIResponseBox*
OAIResponseBoundingBox::getEnvelope() {
    return envelope;
}
void
OAIResponseBoundingBox::setEnvelope(OAIResponseBox* envelope) {
    this->envelope = envelope;
    this->m_envelope_isSet = true;
}

QList<OAIResponseBox*>*
OAIResponseBoundingBox::getBoxes() {
    return boxes;
}
void
OAIResponseBoundingBox::setBoxes(QList<OAIResponseBox*>* boxes) {
    this->boxes = boxes;
    this->m_boxes_isSet = true;
}


bool
OAIResponseBoundingBox::isSet(){
    bool isObjectUpdated = false;
    do{
        if(envelope != nullptr && envelope->isSet()){ isObjectUpdated = true; break;}
        if(boxes->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

