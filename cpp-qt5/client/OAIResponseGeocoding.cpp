/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseGeocoding.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseGeocoding::OAIResponseGeocoding(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseGeocoding::OAIResponseGeocoding() {
    init();
}

OAIResponseGeocoding::~OAIResponseGeocoding() {
    this->cleanup();
}

void
OAIResponseGeocoding::init() {
    type = new QString("");
    m_type_isSet = false;
    features = new QList<OAIResponseGeocodingGeoJsonFeature*>();
    m_features_isSet = false;
}

void
OAIResponseGeocoding::cleanup() {
    if(type != nullptr) { 
        delete type;
    }
    if(features != nullptr) { 
        auto arr = features;
        for(auto o: *arr) { 
            delete o;
        }
        delete features;
    }
}

OAIResponseGeocoding*
OAIResponseGeocoding::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseGeocoding::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&type, pJson["type"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&features, pJson["features"], "QList", "OAIResponseGeocodingGeoJsonFeature");
}

QString
OAIResponseGeocoding::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseGeocoding::asJsonObject() {
    QJsonObject obj;
    if(type != nullptr && *type != QString("")){
        toJsonValue(QString("type"), type, obj, QString("QString"));
    }
    if(features->size() > 0){
        toJsonArray((QList<void*>*)features, obj, "features", "OAIResponseGeocodingGeoJsonFeature");
    }

    return obj;
}

QString*
OAIResponseGeocoding::getType() {
    return type;
}
void
OAIResponseGeocoding::setType(QString* type) {
    this->type = type;
    this->m_type_isSet = true;
}

QList<OAIResponseGeocodingGeoJsonFeature*>*
OAIResponseGeocoding::getFeatures() {
    return features;
}
void
OAIResponseGeocoding::setFeatures(QList<OAIResponseGeocodingGeoJsonFeature*>* features) {
    this->features = features;
    this->m_features_isSet = true;
}


bool
OAIResponseGeocoding::isSet(){
    bool isObjectUpdated = false;
    do{
        if(type != nullptr && *type != QString("")){ isObjectUpdated = true; break;}
        if(features->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

