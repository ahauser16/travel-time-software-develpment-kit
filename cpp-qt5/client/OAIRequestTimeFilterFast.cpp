/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRequestTimeFilterFast.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRequestTimeFilterFast::OAIRequestTimeFilterFast(QString json) {
    init();
    this->fromJson(json);
}

OAIRequestTimeFilterFast::OAIRequestTimeFilterFast() {
    init();
}

OAIRequestTimeFilterFast::~OAIRequestTimeFilterFast() {
    this->cleanup();
}

void
OAIRequestTimeFilterFast::init() {
    locations = new QList<OAIRequestLocation*>();
    m_locations_isSet = false;
    arrival_searches = new OAIRequestTimeFilterFastArrivalSearches();
    m_arrival_searches_isSet = false;
}

void
OAIRequestTimeFilterFast::cleanup() {
    if(locations != nullptr) { 
        auto arr = locations;
        for(auto o: *arr) { 
            delete o;
        }
        delete locations;
    }
    if(arrival_searches != nullptr) { 
        delete arrival_searches;
    }
}

OAIRequestTimeFilterFast*
OAIRequestTimeFilterFast::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIRequestTimeFilterFast::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&locations, pJson["locations"], "QList", "OAIRequestLocation");
    ::OpenAPI::setValue(&arrival_searches, pJson["arrival_searches"], "OAIRequestTimeFilterFastArrivalSearches", "OAIRequestTimeFilterFastArrivalSearches");
    
}

QString
OAIRequestTimeFilterFast::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRequestTimeFilterFast::asJsonObject() {
    QJsonObject obj;
    if(locations->size() > 0){
        toJsonArray((QList<void*>*)locations, obj, "locations", "OAIRequestLocation");
    }
    if((arrival_searches != nullptr) && (arrival_searches->isSet())){
        toJsonValue(QString("arrival_searches"), arrival_searches, obj, QString("OAIRequestTimeFilterFastArrivalSearches"));
    }

    return obj;
}

QList<OAIRequestLocation*>*
OAIRequestTimeFilterFast::getLocations() {
    return locations;
}
void
OAIRequestTimeFilterFast::setLocations(QList<OAIRequestLocation*>* locations) {
    this->locations = locations;
    this->m_locations_isSet = true;
}

OAIRequestTimeFilterFastArrivalSearches*
OAIRequestTimeFilterFast::getArrivalSearches() {
    return arrival_searches;
}
void
OAIRequestTimeFilterFast::setArrivalSearches(OAIRequestTimeFilterFastArrivalSearches* arrival_searches) {
    this->arrival_searches = arrival_searches;
    this->m_arrival_searches_isSet = true;
}


bool
OAIRequestTimeFilterFast::isSet(){
    bool isObjectUpdated = false;
    do{
        if(locations->size() > 0){ isObjectUpdated = true; break;}
        if(arrival_searches != nullptr && arrival_searches->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

