/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseFares.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseFares::OAIResponseFares(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseFares::OAIResponseFares() {
    init();
}

OAIResponseFares::~OAIResponseFares() {
    this->cleanup();
}

void
OAIResponseFares::init() {
    breakdown = new QList<OAIResponseFaresBreakdownItem*>();
    m_breakdown_isSet = false;
    tickets_total = new QList<OAIResponseFareTicket*>();
    m_tickets_total_isSet = false;
}

void
OAIResponseFares::cleanup() {
    if(breakdown != nullptr) { 
        auto arr = breakdown;
        for(auto o: *arr) { 
            delete o;
        }
        delete breakdown;
    }
    if(tickets_total != nullptr) { 
        auto arr = tickets_total;
        for(auto o: *arr) { 
            delete o;
        }
        delete tickets_total;
    }
}

OAIResponseFares*
OAIResponseFares::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseFares::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&breakdown, pJson["breakdown"], "QList", "OAIResponseFaresBreakdownItem");
    
    ::OpenAPI::setValue(&tickets_total, pJson["tickets_total"], "QList", "OAIResponseFareTicket");
}

QString
OAIResponseFares::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseFares::asJsonObject() {
    QJsonObject obj;
    if(breakdown->size() > 0){
        toJsonArray((QList<void*>*)breakdown, obj, "breakdown", "OAIResponseFaresBreakdownItem");
    }
    if(tickets_total->size() > 0){
        toJsonArray((QList<void*>*)tickets_total, obj, "tickets_total", "OAIResponseFareTicket");
    }

    return obj;
}

QList<OAIResponseFaresBreakdownItem*>*
OAIResponseFares::getBreakdown() {
    return breakdown;
}
void
OAIResponseFares::setBreakdown(QList<OAIResponseFaresBreakdownItem*>* breakdown) {
    this->breakdown = breakdown;
    this->m_breakdown_isSet = true;
}

QList<OAIResponseFareTicket*>*
OAIResponseFares::getTicketsTotal() {
    return tickets_total;
}
void
OAIResponseFares::setTicketsTotal(QList<OAIResponseFareTicket*>* tickets_total) {
    this->tickets_total = tickets_total;
    this->m_tickets_total_isSet = true;
}


bool
OAIResponseFares::isSet(){
    bool isObjectUpdated = false;
    do{
        if(breakdown->size() > 0){ isObjectUpdated = true; break;}
        if(tickets_total->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

