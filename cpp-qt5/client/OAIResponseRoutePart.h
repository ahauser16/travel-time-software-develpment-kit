/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseRoutePart.h
 *
 * 
 */

#ifndef OAIResponseRoutePart_H_
#define OAIResponseRoutePart_H_

#include <QJsonObject>


#include "OAICoords.h"
#include "OAIResponseTransportationMode.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseRoutePart: public OAIObject {
public:
    OAIResponseRoutePart();
    OAIResponseRoutePart(QString json);
    ~OAIResponseRoutePart();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIResponseRoutePart* fromJson(QString jsonString) override;

    QString* getId();
    void setId(QString* id);

    QString* getType();
    void setType(QString* type);

    OAIResponseTransportationMode* getMode();
    void setMode(OAIResponseTransportationMode* mode);

    QString* getDirections();
    void setDirections(QString* directions);

    qint32 getDistance();
    void setDistance(qint32 distance);

    qint32 getTravelTime();
    void setTravelTime(qint32 travel_time);

    QList<OAICoords*>* getCoords();
    void setCoords(QList<OAICoords*>* coords);

    QString* getDirection();
    void setDirection(QString* direction);

    QString* getRoad();
    void setRoad(QString* road);

    QString* getTurn();
    void setTurn(QString* turn);

    QString* getLine();
    void setLine(QString* line);

    QString* getDepartureStation();
    void setDepartureStation(QString* departure_station);

    QString* getArrivalStation();
    void setArrivalStation(QString* arrival_station);

    QString* getDepartsAt();
    void setDepartsAt(QString* departs_at);

    QString* getArrivesAt();
    void setArrivesAt(QString* arrives_at);

    qint32 getNumStops();
    void setNumStops(qint32 num_stops);


    virtual bool isSet() override;

private:
    QString* id;
    bool m_id_isSet;

    QString* type;
    bool m_type_isSet;

    OAIResponseTransportationMode* mode;
    bool m_mode_isSet;

    QString* directions;
    bool m_directions_isSet;

    qint32 distance;
    bool m_distance_isSet;

    qint32 travel_time;
    bool m_travel_time_isSet;

    QList<OAICoords*>* coords;
    bool m_coords_isSet;

    QString* direction;
    bool m_direction_isSet;

    QString* road;
    bool m_road_isSet;

    QString* turn;
    bool m_turn_isSet;

    QString* line;
    bool m_line_isSet;

    QString* departure_station;
    bool m_departure_station_isSet;

    QString* arrival_station;
    bool m_arrival_station_isSet;

    QString* departs_at;
    bool m_departs_at_isSet;

    QString* arrives_at;
    bool m_arrives_at_isSet;

    qint32 num_stops;
    bool m_num_stops_isSet;

};

}

#endif /* OAIResponseRoutePart_H_ */
