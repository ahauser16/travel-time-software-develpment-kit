/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseTravelTimeStatistics.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseTravelTimeStatistics::OAIResponseTravelTimeStatistics(QString json) {
    init();
    this->fromJson(json);
}

OAIResponseTravelTimeStatistics::OAIResponseTravelTimeStatistics() {
    init();
}

OAIResponseTravelTimeStatistics::~OAIResponseTravelTimeStatistics() {
    this->cleanup();
}

void
OAIResponseTravelTimeStatistics::init() {
    min = 0;
    m_min_isSet = false;
    max = 0;
    m_max_isSet = false;
    mean = 0;
    m_mean_isSet = false;
    median = 0;
    m_median_isSet = false;
}

void
OAIResponseTravelTimeStatistics::cleanup() {




}

OAIResponseTravelTimeStatistics*
OAIResponseTravelTimeStatistics::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIResponseTravelTimeStatistics::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&min, pJson["min"], "qint32", "");
    
    ::OpenAPI::setValue(&max, pJson["max"], "qint32", "");
    
    ::OpenAPI::setValue(&mean, pJson["mean"], "qint32", "");
    
    ::OpenAPI::setValue(&median, pJson["median"], "qint32", "");
    
}

QString
OAIResponseTravelTimeStatistics::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseTravelTimeStatistics::asJsonObject() {
    QJsonObject obj;
    if(m_min_isSet){
        obj.insert("min", QJsonValue(min));
    }
    if(m_max_isSet){
        obj.insert("max", QJsonValue(max));
    }
    if(m_mean_isSet){
        obj.insert("mean", QJsonValue(mean));
    }
    if(m_median_isSet){
        obj.insert("median", QJsonValue(median));
    }

    return obj;
}

qint32
OAIResponseTravelTimeStatistics::getMin() {
    return min;
}
void
OAIResponseTravelTimeStatistics::setMin(qint32 min) {
    this->min = min;
    this->m_min_isSet = true;
}

qint32
OAIResponseTravelTimeStatistics::getMax() {
    return max;
}
void
OAIResponseTravelTimeStatistics::setMax(qint32 max) {
    this->max = max;
    this->m_max_isSet = true;
}

qint32
OAIResponseTravelTimeStatistics::getMean() {
    return mean;
}
void
OAIResponseTravelTimeStatistics::setMean(qint32 mean) {
    this->mean = mean;
    this->m_mean_isSet = true;
}

qint32
OAIResponseTravelTimeStatistics::getMedian() {
    return median;
}
void
OAIResponseTravelTimeStatistics::setMedian(qint32 median) {
    this->median = median;
    this->m_median_isSet = true;
}


bool
OAIResponseTravelTimeStatistics::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_min_isSet){ isObjectUpdated = true; break;}
        if(m_max_isSet){ isObjectUpdated = true; break;}
        if(m_mean_isSet){ isObjectUpdated = true; break;}
        if(m_median_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

