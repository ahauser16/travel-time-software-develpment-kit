/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ResponseMapInfoFeatures'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ResponseMapInfoFeatures'));
  } else {
    // Browser globals (root is window)
    if (!root.TravelTimePlatformApi) {
      root.TravelTimePlatformApi = {};
    }
    root.TravelTimePlatformApi.ResponseGeocodingProperties = factory(root.TravelTimePlatformApi.ApiClient, root.TravelTimePlatformApi.ResponseMapInfoFeatures);
  }
}(this, function(ApiClient, ResponseMapInfoFeatures) {
  'use strict';



  /**
   * The ResponseGeocodingProperties model module.
   * @module model/ResponseGeocodingProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ResponseGeocodingProperties</code>.
   * @alias module:model/ResponseGeocodingProperties
   * @class
   * @param name {String} 
   * @param label {String} 
   */
  var exports = function(name, label) {
    var _this = this;

    _this['name'] = name;
    _this['label'] = label;
  };

  /**
   * Constructs a <code>ResponseGeocodingProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ResponseGeocodingProperties} obj Optional instance to populate.
   * @return {module:model/ResponseGeocodingProperties} The populated <code>ResponseGeocodingProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('score')) {
        obj['score'] = ApiClient.convertToType(data['score'], 'Number');
      }
      if (data.hasOwnProperty('house_number')) {
        obj['house_number'] = ApiClient.convertToType(data['house_number'], 'String');
      }
      if (data.hasOwnProperty('street')) {
        obj['street'] = ApiClient.convertToType(data['street'], 'String');
      }
      if (data.hasOwnProperty('region')) {
        obj['region'] = ApiClient.convertToType(data['region'], 'String');
      }
      if (data.hasOwnProperty('region_code')) {
        obj['region_code'] = ApiClient.convertToType(data['region_code'], 'String');
      }
      if (data.hasOwnProperty('neighbourhood')) {
        obj['neighbourhood'] = ApiClient.convertToType(data['neighbourhood'], 'String');
      }
      if (data.hasOwnProperty('county')) {
        obj['county'] = ApiClient.convertToType(data['county'], 'String');
      }
      if (data.hasOwnProperty('macroregion')) {
        obj['macroregion'] = ApiClient.convertToType(data['macroregion'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('country_code')) {
        obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
      }
      if (data.hasOwnProperty('continent')) {
        obj['continent'] = ApiClient.convertToType(data['continent'], 'String');
      }
      if (data.hasOwnProperty('postcode')) {
        obj['postcode'] = ApiClient.convertToType(data['postcode'], 'String');
      }
      if (data.hasOwnProperty('features')) {
        obj['features'] = ResponseMapInfoFeatures.constructFromObject(data['features']);
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * @member {Number} score
   */
  exports.prototype['score'] = undefined;
  /**
   * @member {String} house_number
   */
  exports.prototype['house_number'] = undefined;
  /**
   * @member {String} street
   */
  exports.prototype['street'] = undefined;
  /**
   * @member {String} region
   */
  exports.prototype['region'] = undefined;
  /**
   * @member {String} region_code
   */
  exports.prototype['region_code'] = undefined;
  /**
   * @member {String} neighbourhood
   */
  exports.prototype['neighbourhood'] = undefined;
  /**
   * @member {String} county
   */
  exports.prototype['county'] = undefined;
  /**
   * @member {String} macroregion
   */
  exports.prototype['macroregion'] = undefined;
  /**
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * @member {String} country_code
   */
  exports.prototype['country_code'] = undefined;
  /**
   * @member {String} continent
   */
  exports.prototype['continent'] = undefined;
  /**
   * @member {String} postcode
   */
  exports.prototype['postcode'] = undefined;
  /**
   * @member {module:model/ResponseMapInfoFeatures} features
   */
  exports.prototype['features'] = undefined;



  return exports;
}));


