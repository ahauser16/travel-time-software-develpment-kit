/**
* TravelTime Platform API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0.0
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "RequestTimeFilterFastArrivalSearches.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RequestTimeFilterFastArrivalSearches::RequestTimeFilterFastArrivalSearches()
{
    m_Many_to_oneIsSet = false;
    m_One_to_manyIsSet = false;
    
}

RequestTimeFilterFastArrivalSearches::~RequestTimeFilterFastArrivalSearches()
{
}

void RequestTimeFilterFastArrivalSearches::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const RequestTimeFilterFastArrivalSearches& o)
{
    j = nlohmann::json();
    if(o.manyToOneIsSet())
        j["many_to_one"] = o.m_Many_to_one;
    if(o.oneToManyIsSet())
        j["one_to_many"] = o.m_One_to_many;
}

void from_json(const nlohmann::json& j, RequestTimeFilterFastArrivalSearches& o)
{
    if(j.contains("many_to_one"))
    {
        j.at("many_to_one").get_to(o.m_Many_to_one);
        o.m_Many_to_oneIsSet = true;
    } 
    if(j.contains("one_to_many"))
    {
        j.at("one_to_many").get_to(o.m_One_to_many);
        o.m_One_to_manyIsSet = true;
    } 
}

std::vector<RequestTimeFilterFastArrivalManyToOneSearch>& RequestTimeFilterFastArrivalSearches::getManyToOne()
{
    return m_Many_to_one;
}
bool RequestTimeFilterFastArrivalSearches::manyToOneIsSet() const
{
    return m_Many_to_oneIsSet;
}
void RequestTimeFilterFastArrivalSearches::unsetMany_to_one()
{
    m_Many_to_oneIsSet = false;
}
std::vector<RequestTimeFilterFastArrivalOneToManySearch>& RequestTimeFilterFastArrivalSearches::getOneToMany()
{
    return m_One_to_many;
}
bool RequestTimeFilterFastArrivalSearches::oneToManyIsSet() const
{
    return m_One_to_manyIsSet;
}
void RequestTimeFilterFastArrivalSearches::unsetOne_to_many()
{
    m_One_to_manyIsSet = false;
}

}
}
}
}

