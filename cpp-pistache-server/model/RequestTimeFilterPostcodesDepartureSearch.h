/**
* TravelTime Platform API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 1.0.0
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RequestTimeFilterPostcodesDepartureSearch.h
 *
 * 
 */

#ifndef RequestTimeFilterPostcodesDepartureSearch_H_
#define RequestTimeFilterPostcodesDepartureSearch_H_


#include "ModelBase.h"

#include "RequestRangeFull.h"
#include <string>
#include "RequestTransportation.h"
#include "RequestTimeFilterPostcodesProperty.h"
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  RequestTimeFilterPostcodesDepartureSearch
    : public ModelBase
{
public:
    RequestTimeFilterPostcodesDepartureSearch();
    virtual ~RequestTimeFilterPostcodesDepartureSearch();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// RequestTimeFilterPostcodesDepartureSearch members

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    RequestTransportation getTransportation() const;
    void setTransportation(RequestTransportation const& value);
        /// <summary>
    /// 
    /// </summary>
    int32_t getTravelTime() const;
    void setTravelTime(int32_t const value);
        /// <summary>
    /// 
    /// </summary>
    std::string getDepartureTime() const;
    void setDepartureTime(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    std::vector<RequestTimeFilterPostcodesProperty>& getProperties();
        /// <summary>
    /// 
    /// </summary>
    RequestRangeFull getRange() const;
    void setRange(RequestRangeFull const& value);
    bool rangeIsSet() const;
    void unsetRange();

protected:
    std::string m_Id;

    RequestTransportation m_Transportation;

    int32_t m_Travel_time;

    std::string m_Departure_time;

    std::vector<RequestTimeFilterPostcodesProperty> m_Properties;

    RequestRangeFull m_Range;
    bool m_RangeIsSet;
};

}
}
}
}

#endif /* RequestTimeFilterPostcodesDepartureSearch_H_ */
