/**
* TravelTime Platform API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 1.0.0
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ResponseRoute.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ResponseRoute::ResponseRoute()
{
    m_Departure_time = "";
    m_Arrival_time = "";
    
}

ResponseRoute::~ResponseRoute()
{
}

void ResponseRoute::validate()
{
    // TODO: implement validation
}

nlohmann::json ResponseRoute::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["departure_time"] = ModelBase::toJson(m_Departure_time);
    val["arrival_time"] = ModelBase::toJson(m_Arrival_time);
    {
        nlohmann::json jsonArray;
        for( auto& item : m_Parts )
        {
            jsonArray.push_back(ModelBase::toJson(item));
        }
        val["parts"] = jsonArray;
        
    }
    

    return val;
}

void ResponseRoute::fromJson(const nlohmann::json& val)
{
    setDepartureTime(val.at("departure_time"));
    setArrivalTime(val.at("arrival_time"));
    {
        m_Parts.clear();
                    for( auto& item : val["parts"] )
            {
                
                if(item.is_null())
                {
                    m_Parts.push_back( ResponseRoutePart() );
                }
                else
                {
                    ResponseRoutePart newItem;
                    newItem.fromJson(item);
                    m_Parts.push_back( newItem );
                }
                
            }
    }
    
}


std::string ResponseRoute::getDepartureTime() const
{
    return m_Departure_time;
}
void ResponseRoute::setDepartureTime(std::string const& value)
{
    m_Departure_time = value;
    
}
std::string ResponseRoute::getArrivalTime() const
{
    return m_Arrival_time;
}
void ResponseRoute::setArrivalTime(std::string const& value)
{
    m_Arrival_time = value;
    
}
std::vector<ResponseRoutePart>& ResponseRoute::getParts()
{
    return m_Parts;
}

}
}
}
}

