//
// ResponseRoutePart.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public class ResponseRoutePart: JSONEncodable {
    public enum ModelType: String { 
        case Basic = "basic"
        case StartEnd = "start_end"
        case Road = "road"
        case PublicTransport = "public_transport"
    }
    public var id: String?
    public var type: ModelType?
    public var mode: ResponseTransportationMode?
    public var directions: String?
    public var distance: Int32?
    public var travelTime: Int32?
    public var coords: [Coords]?
    public var direction: String?
    public var road: String?
    public var turn: String?
    public var line: String?
    public var departureStation: String?
    public var arrivalStation: String?
    public var departsAt: String?
    public var arrivesAt: String?
    public var numStops: Int32?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["type"] = self.type?.rawValue
        nillableDictionary["mode"] = self.mode?.encodeToJSON()
        nillableDictionary["directions"] = self.directions
        nillableDictionary["distance"] = self.distance?.encodeToJSON()
        nillableDictionary["travel_time"] = self.travelTime?.encodeToJSON()
        nillableDictionary["coords"] = self.coords?.encodeToJSON()
        nillableDictionary["direction"] = self.direction
        nillableDictionary["road"] = self.road
        nillableDictionary["turn"] = self.turn
        nillableDictionary["line"] = self.line
        nillableDictionary["departure_station"] = self.departureStation
        nillableDictionary["arrival_station"] = self.arrivalStation
        nillableDictionary["departs_at"] = self.departsAt
        nillableDictionary["arrives_at"] = self.arrivesAt
        nillableDictionary["num_stops"] = self.numStops?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
