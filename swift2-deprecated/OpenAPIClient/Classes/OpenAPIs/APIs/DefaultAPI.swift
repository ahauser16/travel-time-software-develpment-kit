//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class DefaultAPI: APIBase {
    /**

     - parameter focusLat: (query)  
     - parameter focusLng: (query)  
     - parameter withinCountry: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func geocodingReverseSearch(focusLat focusLat: Double, focusLng: Double, withinCountry: String? = nil, completion: ((data: ResponseGeocoding?, error: ErrorType?) -> Void)) {
        geocodingReverseSearchWithRequestBuilder(focusLat: focusLat, focusLng: focusLng, withinCountry: withinCountry).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /v4/geocoding/reverse     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "features" : [ {
    "geometry" : {
      "coordinates" : [ 0.80082819046101150206595775671303272247314453125, 0.80082819046101150206595775671303272247314453125 ],
      "type" : "type"
    },
    "type" : "type",
    "properties" : {
      "continent" : "continent",
      "country" : "country",
      "city" : "city",
      "county" : "county",
      "postcode" : "postcode",
      "house_number" : "house_number",
      "label" : "label",
      "macroregion" : "macroregion",
      "score" : 6.02745618307040320615897144307382404804229736328125,
      "country_code" : "country_code",
      "features" : {
        "public_transport" : {
          "date_start" : "2000-01-23T04:56:07.000+00:00",
          "date_end" : "2000-01-23T04:56:07.000+00:00"
        },
        "fares" : true,
        "postcodes" : true
      },
      "street" : "street",
      "neighbourhood" : "neighbourhood",
      "name" : "name",
      "region" : "region",
      "region_code" : "region_code"
    }
  }, {
    "geometry" : {
      "coordinates" : [ 0.80082819046101150206595775671303272247314453125, 0.80082819046101150206595775671303272247314453125 ],
      "type" : "type"
    },
    "type" : "type",
    "properties" : {
      "continent" : "continent",
      "country" : "country",
      "city" : "city",
      "county" : "county",
      "postcode" : "postcode",
      "house_number" : "house_number",
      "label" : "label",
      "macroregion" : "macroregion",
      "score" : 6.02745618307040320615897144307382404804229736328125,
      "country_code" : "country_code",
      "features" : {
        "public_transport" : {
          "date_start" : "2000-01-23T04:56:07.000+00:00",
          "date_end" : "2000-01-23T04:56:07.000+00:00"
        },
        "fares" : true,
        "postcodes" : true
      },
      "street" : "street",
      "neighbourhood" : "neighbourhood",
      "name" : "name",
      "region" : "region",
      "region_code" : "region_code"
    }
  } ],
  "type" : "type"
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/geocoding-reverse
}
     - parameter focusLat: (query)  
     - parameter focusLng: (query)  
     - parameter withinCountry: (query)  (optional)

     - returns: RequestBuilder<ResponseGeocoding> 
     */
    public class func geocodingReverseSearchWithRequestBuilder(focusLat focusLat: Double, focusLng: Double, withinCountry: String? = nil) -> RequestBuilder<ResponseGeocoding> {
        let path = "/v4/geocoding/reverse"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "focus.lat": focusLat,
            "focus.lng": focusLng,
            "within.country": withinCountry
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseGeocoding>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter query: (query)  
     - parameter withinCountry: (query)  (optional)
     - parameter focusLat: (query)  (optional)
     - parameter focusLng: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func geocodingSearch(query query: String, withinCountry: String? = nil, focusLat: Double? = nil, focusLng: Double? = nil, completion: ((data: ResponseGeocoding?, error: ErrorType?) -> Void)) {
        geocodingSearchWithRequestBuilder(query: query, withinCountry: withinCountry, focusLat: focusLat, focusLng: focusLng).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /v4/geocoding/search     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "features" : [ {
    "geometry" : {
      "coordinates" : [ 0.80082819046101150206595775671303272247314453125, 0.80082819046101150206595775671303272247314453125 ],
      "type" : "type"
    },
    "type" : "type",
    "properties" : {
      "continent" : "continent",
      "country" : "country",
      "city" : "city",
      "county" : "county",
      "postcode" : "postcode",
      "house_number" : "house_number",
      "label" : "label",
      "macroregion" : "macroregion",
      "score" : 6.02745618307040320615897144307382404804229736328125,
      "country_code" : "country_code",
      "features" : {
        "public_transport" : {
          "date_start" : "2000-01-23T04:56:07.000+00:00",
          "date_end" : "2000-01-23T04:56:07.000+00:00"
        },
        "fares" : true,
        "postcodes" : true
      },
      "street" : "street",
      "neighbourhood" : "neighbourhood",
      "name" : "name",
      "region" : "region",
      "region_code" : "region_code"
    }
  }, {
    "geometry" : {
      "coordinates" : [ 0.80082819046101150206595775671303272247314453125, 0.80082819046101150206595775671303272247314453125 ],
      "type" : "type"
    },
    "type" : "type",
    "properties" : {
      "continent" : "continent",
      "country" : "country",
      "city" : "city",
      "county" : "county",
      "postcode" : "postcode",
      "house_number" : "house_number",
      "label" : "label",
      "macroregion" : "macroregion",
      "score" : 6.02745618307040320615897144307382404804229736328125,
      "country_code" : "country_code",
      "features" : {
        "public_transport" : {
          "date_start" : "2000-01-23T04:56:07.000+00:00",
          "date_end" : "2000-01-23T04:56:07.000+00:00"
        },
        "fares" : true,
        "postcodes" : true
      },
      "street" : "street",
      "neighbourhood" : "neighbourhood",
      "name" : "name",
      "region" : "region",
      "region_code" : "region_code"
    }
  } ],
  "type" : "type"
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/geocoding-search
}
     - parameter query: (query)  
     - parameter withinCountry: (query)  (optional)
     - parameter focusLat: (query)  (optional)
     - parameter focusLng: (query)  (optional)

     - returns: RequestBuilder<ResponseGeocoding> 
     */
    public class func geocodingSearchWithRequestBuilder(query query: String, withinCountry: String? = nil, focusLat: Double? = nil, focusLng: Double? = nil) -> RequestBuilder<ResponseGeocoding> {
        let path = "/v4/geocoding/search"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "query": query,
            "within.country": withinCountry,
            "focus.lat": focusLat,
            "focus.lng": focusLng
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseGeocoding>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func mapInfo(completion: ((data: ResponseMapInfo?, error: ErrorType?) -> Void)) {
        mapInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /v4/map-info     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "maps" : [ {
    "features" : {
      "public_transport" : {
        "date_start" : "2000-01-23T04:56:07.000+00:00",
        "date_end" : "2000-01-23T04:56:07.000+00:00"
      },
      "fares" : true,
      "postcodes" : true
    },
    "name" : "name"
  }, {
    "features" : {
      "public_transport" : {
        "date_start" : "2000-01-23T04:56:07.000+00:00",
        "date_end" : "2000-01-23T04:56:07.000+00:00"
      },
      "fares" : true,
      "postcodes" : true
    },
    "name" : "name"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/map-info
}

     - returns: RequestBuilder<ResponseMapInfo> 
     */
    public class func mapInfoWithRequestBuilder() -> RequestBuilder<ResponseMapInfo> {
        let path = "/v4/map-info"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseMapInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestRoutes: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func routes(requestRoutes requestRoutes: RequestRoutes, completion: ((data: ResponseRoutes?, error: ErrorType?) -> Void)) {
        routesWithRequestBuilder(requestRoutes: requestRoutes).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/routes     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  }, {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/routes
}
     - parameter requestRoutes: (body)  

     - returns: RequestBuilder<ResponseRoutes> 
     */
    public class func routesWithRequestBuilder(requestRoutes requestRoutes: RequestRoutes) -> RequestBuilder<ResponseRoutes> {
        let path = "/v4/routes"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestRoutes.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseRoutes>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestSupportedLocations: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func supportedLocations(requestSupportedLocations requestSupportedLocations: RequestSupportedLocations, completion: ((data: ResponseSupportedLocations?, error: ErrorType?) -> Void)) {
        supportedLocationsWithRequestBuilder(requestSupportedLocations: requestSupportedLocations).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/supported-locations     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "unsupported_locations" : [ "unsupported_locations", "unsupported_locations" ],
  "locations" : [ {
    "map_name" : "map_name",
    "id" : "id"
  }, {
    "map_name" : "map_name",
    "id" : "id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/supported-locations
}
     - parameter requestSupportedLocations: (body)  

     - returns: RequestBuilder<ResponseSupportedLocations> 
     */
    public class func supportedLocationsWithRequestBuilder(requestSupportedLocations requestSupportedLocations: RequestSupportedLocations) -> RequestBuilder<ResponseSupportedLocations> {
        let path = "/v4/supported-locations"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestSupportedLocations.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseSupportedLocations>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeFilter: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeFilter(requestTimeFilter requestTimeFilter: RequestTimeFilter, completion: ((data: ResponseTimeFilter?, error: ErrorType?) -> Void)) {
        timeFilterWithRequestBuilder(requestTimeFilter: requestTimeFilter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-filter     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  }, {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "distance_breakdown" : [ {
          "distance" : 1
        }, {
          "distance" : 1
        } ],
        "route" : {
          "arrival_time" : "2000-01-23T04:56:07.000+00:00",
          "parts" : [ {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          }, {
            "departs_at" : "departs_at",
            "distance" : 2,
            "line" : "line",
            "num_stops" : 2,
            "turn" : "turn",
            "type" : "basic",
            "travel_time" : 7,
            "directions" : "directions",
            "arrives_at" : "arrives_at",
            "road" : "road",
            "departure_station" : "departure_station",
            "id" : "id",
            "arrival_station" : "arrival_station",
            "coords" : [ {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            }, {
              "lng" : 3.61607674925191080461672754609026014804840087890625,
              "lat" : 9.301444243932575517419536481611430644989013671875
            } ],
            "direction" : "direction"
          } ],
          "departure_time" : "2000-01-23T04:56:07.000+00:00"
        },
        "distance" : 6,
        "travel_time" : 0,
        "fares" : {
          "breakdown" : [ {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          }, {
            "modes" : [ null, null ],
            "tickets" : [ {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            }, {
              "price" : 5.63737665663332876420099637471139430999755859375,
              "currency" : "currency",
              "type" : "single"
            } ],
            "route_part_ids" : [ 5, 5 ]
          } ],
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/time-filter
}
     - parameter requestTimeFilter: (body)  

     - returns: RequestBuilder<ResponseTimeFilter> 
     */
    public class func timeFilterWithRequestBuilder(requestTimeFilter requestTimeFilter: RequestTimeFilter) -> RequestBuilder<ResponseTimeFilter> {
        let path = "/v4/time-filter"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeFilter.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeFilter>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeFilterFast: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeFilterFast(requestTimeFilterFast requestTimeFilterFast: RequestTimeFilterFast, completion: ((data: ResponseTimeFilterFast?, error: ErrorType?) -> Void)) {
        timeFilterFastWithRequestBuilder(requestTimeFilterFast: requestTimeFilterFast).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-filter/fast     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  }, {
    "unreachable" : [ "unreachable", "unreachable" ],
    "locations" : [ {
      "id" : "id",
      "properties" : [ {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    }, {
      "id" : "id",
      "properties" : [ {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      }, {
        "travel_time" : 0,
        "fares" : {
          "tickets_total" : [ {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          }, {
            "price" : 5.63737665663332876420099637471139430999755859375,
            "currency" : "currency",
            "type" : "single"
          } ]
        }
      } ]
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/time-filter-fast
}
     - parameter requestTimeFilterFast: (body)  

     - returns: RequestBuilder<ResponseTimeFilterFast> 
     */
    public class func timeFilterFastWithRequestBuilder(requestTimeFilterFast requestTimeFilterFast: RequestTimeFilterFast) -> RequestBuilder<ResponseTimeFilterFast> {
        let path = "/v4/time-filter/fast"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeFilterFast.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeFilterFast>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeFilterPostcodeDistricts: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeFilterPostcodeDistricts(requestTimeFilterPostcodeDistricts requestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts, completion: ((data: ResponseTimeFilterPostcodeDistricts?, error: ErrorType?) -> Void)) {
        timeFilterPostcodeDistrictsWithRequestBuilder(requestTimeFilterPostcodeDistricts: requestTimeFilterPostcodeDistricts).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-filter/postcode-districts     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "districts" : [ {
      "code" : "",
      "properties" : {
        "coverage" : 5.63737665663332876420099637471139430999755859375,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    }, {
      "code" : "",
      "properties" : {
        "coverage" : 5.63737665663332876420099637471139430999755859375,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    } ],
    "search_id" : "search_id"
  }, {
    "districts" : [ {
      "code" : "",
      "properties" : {
        "coverage" : 5.63737665663332876420099637471139430999755859375,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    }, {
      "code" : "",
      "properties" : {
        "coverage" : 5.63737665663332876420099637471139430999755859375,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/postcode-search
}
     - parameter requestTimeFilterPostcodeDistricts: (body)  

     - returns: RequestBuilder<ResponseTimeFilterPostcodeDistricts> 
     */
    public class func timeFilterPostcodeDistrictsWithRequestBuilder(requestTimeFilterPostcodeDistricts requestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts) -> RequestBuilder<ResponseTimeFilterPostcodeDistricts> {
        let path = "/v4/time-filter/postcode-districts"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeFilterPostcodeDistricts.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeFilterPostcodeDistricts>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeFilterPostcodeSectors: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeFilterPostcodeSectors(requestTimeFilterPostcodeSectors requestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors, completion: ((data: ResponseTimeFilterPostcodeSectors?, error: ErrorType?) -> Void)) {
        timeFilterPostcodeSectorsWithRequestBuilder(requestTimeFilterPostcodeSectors: requestTimeFilterPostcodeSectors).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-filter/postcode-sectors     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "sectors" : [ {
      "code" : "",
      "properties" : {
        "coverage" : 0.80082819046101150206595775671303272247314453125,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    }, {
      "code" : "",
      "properties" : {
        "coverage" : 0.80082819046101150206595775671303272247314453125,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    } ],
    "search_id" : "search_id"
  }, {
    "sectors" : [ {
      "code" : "",
      "properties" : {
        "coverage" : 0.80082819046101150206595775671303272247314453125,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    }, {
      "code" : "",
      "properties" : {
        "coverage" : 0.80082819046101150206595775671303272247314453125,
        "travel_time_all" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        },
        "travel_time_reachable" : {
          "min" : 0,
          "median" : 5,
          "max" : 6,
          "mean" : 1
        }
      }
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/postcode-sector-filter
}
     - parameter requestTimeFilterPostcodeSectors: (body)  

     - returns: RequestBuilder<ResponseTimeFilterPostcodeSectors> 
     */
    public class func timeFilterPostcodeSectorsWithRequestBuilder(requestTimeFilterPostcodeSectors requestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors) -> RequestBuilder<ResponseTimeFilterPostcodeSectors> {
        let path = "/v4/time-filter/postcode-sectors"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeFilterPostcodeSectors.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeFilterPostcodeSectors>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeFilterPostcodes: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeFilterPostcodes(requestTimeFilterPostcodes requestTimeFilterPostcodes: RequestTimeFilterPostcodes, completion: ((data: ResponseTimeFilterPostcodes?, error: ErrorType?) -> Void)) {
        timeFilterPostcodesWithRequestBuilder(requestTimeFilterPostcodes: requestTimeFilterPostcodes).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-filter/postcodes     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "postcodes" : [ {
      "code" : "",
      "properties" : [ {
        "distance" : 6,
        "travel_time" : 0
      }, {
        "distance" : 6,
        "travel_time" : 0
      } ]
    }, {
      "code" : "",
      "properties" : [ {
        "distance" : 6,
        "travel_time" : 0
      }, {
        "distance" : 6,
        "travel_time" : 0
      } ]
    } ],
    "search_id" : "search_id"
  }, {
    "postcodes" : [ {
      "code" : "",
      "properties" : [ {
        "distance" : 6,
        "travel_time" : 0
      }, {
        "distance" : 6,
        "travel_time" : 0
      } ]
    }, {
      "code" : "",
      "properties" : [ {
        "distance" : 6,
        "travel_time" : 0
      }, {
        "distance" : 6,
        "travel_time" : 0
      } ]
    } ],
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/postcode-search
}
     - parameter requestTimeFilterPostcodes: (body)  

     - returns: RequestBuilder<ResponseTimeFilterPostcodes> 
     */
    public class func timeFilterPostcodesWithRequestBuilder(requestTimeFilterPostcodes requestTimeFilterPostcodes: RequestTimeFilterPostcodes) -> RequestBuilder<ResponseTimeFilterPostcodes> {
        let path = "/v4/time-filter/postcodes"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeFilterPostcodes.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeFilterPostcodes>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter requestTimeMap: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func timeMap(requestTimeMap requestTimeMap: RequestTimeMap, completion: ((data: ResponseTimeMap?, error: ErrorType?) -> Void)) {
        timeMapWithRequestBuilder(requestTimeMap: requestTimeMap).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /v4/time-map     - API Key:
       - type: apiKey X-Api-Key 
       - name: ApiKey
     - API Key:
       - type: apiKey X-Application-Id 
       - name: ApplicationId
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "shapes" : [ {
      "shell" : [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ],
      "holes" : [ [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ], [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ] ]
    }, {
      "shell" : [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ],
      "holes" : [ [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ], [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ] ]
    } ],
    "properties" : {
      "is_only_walking" : true
    },
    "search_id" : "search_id"
  }, {
    "shapes" : [ {
      "shell" : [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ],
      "holes" : [ [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ], [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ] ]
    }, {
      "shell" : [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ],
      "holes" : [ [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ], [ {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      }, {
        "lng" : 3.61607674925191080461672754609026014804840087890625,
        "lat" : 9.301444243932575517419536481611430644989013671875
      } ] ]
    } ],
    "properties" : {
      "is_only_walking" : true
    },
    "search_id" : "search_id"
  } ]
}, statusCode=200}]
     - externalDocs: class ExternalDocumentation {
    description: null
    url: http://docs.traveltimeplatform.com/reference/time-map
}
     - parameter requestTimeMap: (body)  

     - returns: RequestBuilder<ResponseTimeMap> 
     */
    public class func timeMapWithRequestBuilder(requestTimeMap requestTimeMap: RequestTimeMap) -> RequestBuilder<ResponseTimeMap> {
        let path = "/v4/time-map"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = requestTimeMap.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseTimeMap>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
