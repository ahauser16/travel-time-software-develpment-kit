/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.3.4.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ResponseTimeFilterPostcodesProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ResponseTimeFilterPostcodesProperties::ResponseTimeFilterPostcodesProperties()
{
    m_Travel_time = 0;
    m_Travel_timeIsSet = false;
    m_Distance = 0;
    m_DistanceIsSet = false;
}

ResponseTimeFilterPostcodesProperties::~ResponseTimeFilterPostcodesProperties()
{
}

void ResponseTimeFilterPostcodesProperties::validate()
{
    // TODO: implement validation
}

web::json::value ResponseTimeFilterPostcodesProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Travel_timeIsSet)
    {
        val[utility::conversions::to_string_t("travel_time")] = ModelBase::toJson(m_Travel_time);
    }
    if(m_DistanceIsSet)
    {
        val[utility::conversions::to_string_t("distance")] = ModelBase::toJson(m_Distance);
    }

    return val;
}

void ResponseTimeFilterPostcodesProperties::fromJson(const web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("travel_time")))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t("travel_time"));
        if(!fieldValue.is_null())
        {
            setTravelTime(ModelBase::int32_tFromJson(fieldValue));
        }
    }
    if(val.has_field(utility::conversions::to_string_t("distance")))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t("distance"));
        if(!fieldValue.is_null())
        {
            setDistance(ModelBase::int32_tFromJson(fieldValue));
        }
    }
}

void ResponseTimeFilterPostcodesProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Travel_timeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("travel_time"), m_Travel_time));
    }
    if(m_DistanceIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("distance"), m_Distance));
    }
}

void ResponseTimeFilterPostcodesProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("travel_time")))
    {
        setTravelTime(ModelBase::int32_tFromHttpContent(multipart->getContent(utility::conversions::to_string_t("travel_time"))));
    }
    if(multipart->hasContent(utility::conversions::to_string_t("distance")))
    {
        setDistance(ModelBase::int32_tFromHttpContent(multipart->getContent(utility::conversions::to_string_t("distance"))));
    }
}

int32_t ResponseTimeFilterPostcodesProperties::getTravelTime() const
{
    return m_Travel_time;
}

void ResponseTimeFilterPostcodesProperties::setTravelTime(int32_t value)
{
    m_Travel_time = value;
    m_Travel_timeIsSet = true;
}

bool ResponseTimeFilterPostcodesProperties::travelTimeIsSet() const
{
    return m_Travel_timeIsSet;
}

void ResponseTimeFilterPostcodesProperties::unsetTravel_time()
{
    m_Travel_timeIsSet = false;
}

int32_t ResponseTimeFilterPostcodesProperties::getDistance() const
{
    return m_Distance;
}

void ResponseTimeFilterPostcodesProperties::setDistance(int32_t value)
{
    m_Distance = value;
    m_DistanceIsSet = true;
}

bool ResponseTimeFilterPostcodesProperties::distanceIsSet() const
{
    return m_DistanceIsSet;
}

void ResponseTimeFilterPostcodesProperties::unsetDistance()
{
    m_DistanceIsSet = false;
}

}
}
}
}

