# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from traveltimeplatform.models.base_model_ import Model
from traveltimeplatform import util


class ResponseBox(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_lat=None, max_lat=None, min_lng=None, max_lng=None):  # noqa: E501
        """ResponseBox - a model defined in OpenAPI

        :param min_lat: The min_lat of this ResponseBox.  # noqa: E501
        :type min_lat: float
        :param max_lat: The max_lat of this ResponseBox.  # noqa: E501
        :type max_lat: float
        :param min_lng: The min_lng of this ResponseBox.  # noqa: E501
        :type min_lng: float
        :param max_lng: The max_lng of this ResponseBox.  # noqa: E501
        :type max_lng: float
        """
        self.openapi_types = {
            'min_lat': float,
            'max_lat': float,
            'min_lng': float,
            'max_lng': float
        }

        self.attribute_map = {
            'min_lat': 'min_lat',
            'max_lat': 'max_lat',
            'min_lng': 'min_lng',
            'max_lng': 'max_lng'
        }

        self._min_lat = min_lat
        self._max_lat = max_lat
        self._min_lng = min_lng
        self._max_lng = max_lng

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseBox':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseBox of this ResponseBox.  # noqa: E501
        :rtype: ResponseBox
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_lat(self):
        """Gets the min_lat of this ResponseBox.


        :return: The min_lat of this ResponseBox.
        :rtype: float
        """
        return self._min_lat

    @min_lat.setter
    def min_lat(self, min_lat):
        """Sets the min_lat of this ResponseBox.


        :param min_lat: The min_lat of this ResponseBox.
        :type min_lat: float
        """
        if min_lat is None:
            raise ValueError("Invalid value for `min_lat`, must not be `None`")  # noqa: E501

        self._min_lat = min_lat

    @property
    def max_lat(self):
        """Gets the max_lat of this ResponseBox.


        :return: The max_lat of this ResponseBox.
        :rtype: float
        """
        return self._max_lat

    @max_lat.setter
    def max_lat(self, max_lat):
        """Sets the max_lat of this ResponseBox.


        :param max_lat: The max_lat of this ResponseBox.
        :type max_lat: float
        """
        if max_lat is None:
            raise ValueError("Invalid value for `max_lat`, must not be `None`")  # noqa: E501

        self._max_lat = max_lat

    @property
    def min_lng(self):
        """Gets the min_lng of this ResponseBox.


        :return: The min_lng of this ResponseBox.
        :rtype: float
        """
        return self._min_lng

    @min_lng.setter
    def min_lng(self, min_lng):
        """Sets the min_lng of this ResponseBox.


        :param min_lng: The min_lng of this ResponseBox.
        :type min_lng: float
        """
        if min_lng is None:
            raise ValueError("Invalid value for `min_lng`, must not be `None`")  # noqa: E501

        self._min_lng = min_lng

    @property
    def max_lng(self):
        """Gets the max_lng of this ResponseBox.


        :return: The max_lng of this ResponseBox.
        :rtype: float
        """
        return self._max_lng

    @max_lng.setter
    def max_lng(self, max_lng):
        """Sets the max_lng of this ResponseBox.


        :param max_lng: The max_lng of this ResponseBox.
        :type max_lng: float
        """
        if max_lng is None:
            raise ValueError("Invalid value for `max_lng`, must not be `None`")  # noqa: E501

        self._max_lng = max_lng
