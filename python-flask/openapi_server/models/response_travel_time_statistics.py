# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ResponseTravelTimeStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min=None, max=None, mean=None, median=None):  # noqa: E501
        """ResponseTravelTimeStatistics - a model defined in OpenAPI

        :param min: The min of this ResponseTravelTimeStatistics.  # noqa: E501
        :type min: int
        :param max: The max of this ResponseTravelTimeStatistics.  # noqa: E501
        :type max: int
        :param mean: The mean of this ResponseTravelTimeStatistics.  # noqa: E501
        :type mean: int
        :param median: The median of this ResponseTravelTimeStatistics.  # noqa: E501
        :type median: int
        """
        self.openapi_types = {
            'min': int,
            'max': int,
            'mean': int,
            'median': int
        }

        self.attribute_map = {
            'min': 'min',
            'max': 'max',
            'mean': 'mean',
            'median': 'median'
        }

        self._min = min
        self._max = max
        self._mean = mean
        self._median = median

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseTravelTimeStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseTravelTimeStatistics of this ResponseTravelTimeStatistics.  # noqa: E501
        :rtype: ResponseTravelTimeStatistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min(self):
        """Gets the min of this ResponseTravelTimeStatistics.


        :return: The min of this ResponseTravelTimeStatistics.
        :rtype: int
        """
        return self._min

    @min.setter
    def min(self, min):
        """Sets the min of this ResponseTravelTimeStatistics.


        :param min: The min of this ResponseTravelTimeStatistics.
        :type min: int
        """
        if min is None:
            raise ValueError("Invalid value for `min`, must not be `None`")  # noqa: E501

        self._min = min

    @property
    def max(self):
        """Gets the max of this ResponseTravelTimeStatistics.


        :return: The max of this ResponseTravelTimeStatistics.
        :rtype: int
        """
        return self._max

    @max.setter
    def max(self, max):
        """Sets the max of this ResponseTravelTimeStatistics.


        :param max: The max of this ResponseTravelTimeStatistics.
        :type max: int
        """
        if max is None:
            raise ValueError("Invalid value for `max`, must not be `None`")  # noqa: E501

        self._max = max

    @property
    def mean(self):
        """Gets the mean of this ResponseTravelTimeStatistics.


        :return: The mean of this ResponseTravelTimeStatistics.
        :rtype: int
        """
        return self._mean

    @mean.setter
    def mean(self, mean):
        """Sets the mean of this ResponseTravelTimeStatistics.


        :param mean: The mean of this ResponseTravelTimeStatistics.
        :type mean: int
        """
        if mean is None:
            raise ValueError("Invalid value for `mean`, must not be `None`")  # noqa: E501

        self._mean = mean

    @property
    def median(self):
        """Gets the median of this ResponseTravelTimeStatistics.


        :return: The median of this ResponseTravelTimeStatistics.
        :rtype: int
        """
        return self._median

    @median.setter
    def median(self, median):
        """Sets the median of this ResponseTravelTimeStatistics.


        :param median: The median of this ResponseTravelTimeStatistics.
        :type median: int
        """
        if median is None:
            raise ValueError("Invalid value for `median`, must not be `None`")  # noqa: E501

        self._median = median
