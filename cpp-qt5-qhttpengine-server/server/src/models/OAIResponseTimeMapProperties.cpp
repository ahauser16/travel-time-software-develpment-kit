/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseTimeMapProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseTimeMapProperties::OAIResponseTimeMapProperties(QString json) {
    this->fromJson(json);
}

OAIResponseTimeMapProperties::OAIResponseTimeMapProperties() {
    this->init();
}

OAIResponseTimeMapProperties::~OAIResponseTimeMapProperties() {

}

void
OAIResponseTimeMapProperties::init() {
    m_is_only_walking_isSet = false;
}

void
OAIResponseTimeMapProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIResponseTimeMapProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(is_only_walking, json[QString("is_only_walking")]);
    
}

QString
OAIResponseTimeMapProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseTimeMapProperties::asJsonObject() const {
    QJsonObject obj;
	if(m_is_only_walking_isSet){
        obj.insert(QString("is_only_walking"), ::OpenAPI::toJsonValue(is_only_walking));
    }
    return obj;
}

bool
OAIResponseTimeMapProperties::isIsOnlyWalking() const {
    return is_only_walking;
}
void
OAIResponseTimeMapProperties::setIsOnlyWalking(const bool &is_only_walking) {
    this->is_only_walking = is_only_walking;
    this->m_is_only_walking_isSet = true;
}


bool
OAIResponseTimeMapProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_is_only_walking_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

