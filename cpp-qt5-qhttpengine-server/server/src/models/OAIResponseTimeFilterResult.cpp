/**
 * TravelTime Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIResponseTimeFilterResult.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIResponseTimeFilterResult::OAIResponseTimeFilterResult(QString json) {
    this->fromJson(json);
}

OAIResponseTimeFilterResult::OAIResponseTimeFilterResult() {
    this->init();
}

OAIResponseTimeFilterResult::~OAIResponseTimeFilterResult() {

}

void
OAIResponseTimeFilterResult::init() {
    m_search_id_isSet = false;
    m_locations_isSet = false;
    m_unreachable_isSet = false;
}

void
OAIResponseTimeFilterResult::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIResponseTimeFilterResult::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(search_id, json[QString("search_id")]);
    
    
    ::OpenAPI::fromJsonValue(locations, json[QString("locations")]);
    
    ::OpenAPI::fromJsonValue(unreachable, json[QString("unreachable")]);
}

QString
OAIResponseTimeFilterResult::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIResponseTimeFilterResult::asJsonObject() const {
    QJsonObject obj;
	if(m_search_id_isSet){
        obj.insert(QString("search_id"), ::OpenAPI::toJsonValue(search_id));
    }
	
    if(locations.size() > 0){
        obj.insert(QString("locations"), ::OpenAPI::toJsonValue(locations));
    } 
	
    if(unreachable.size() > 0){
        obj.insert(QString("unreachable"), ::OpenAPI::toJsonValue(unreachable));
    } 
    return obj;
}

QString
OAIResponseTimeFilterResult::getSearchId() const {
    return search_id;
}
void
OAIResponseTimeFilterResult::setSearchId(const QString &search_id) {
    this->search_id = search_id;
    this->m_search_id_isSet = true;
}

QList<OAIResponseTimeFilterLocation>
OAIResponseTimeFilterResult::getLocations() const {
    return locations;
}
void
OAIResponseTimeFilterResult::setLocations(const QList<OAIResponseTimeFilterLocation> &locations) {
    this->locations = locations;
    this->m_locations_isSet = true;
}

QList<QString>
OAIResponseTimeFilterResult::getUnreachable() const {
    return unreachable;
}
void
OAIResponseTimeFilterResult::setUnreachable(const QList<QString> &unreachable) {
    this->unreachable = unreachable;
    this->m_unreachable_isSet = true;
}


bool
OAIResponseTimeFilterResult::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_search_id_isSet){ isObjectUpdated = true; break;}
    
        if(locations.size() > 0){ isObjectUpdated = true; break;}
    
        if(unreachable.size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

