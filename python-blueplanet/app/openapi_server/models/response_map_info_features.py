# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from app.openapi_server.models.response_map_info_features_public_transport import ResponseMapInfoFeaturesPublicTransport  # noqa: F401,E501
from openapi_server import util


class ResponseMapInfoFeatures(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, public_transport: ResponseMapInfoFeaturesPublicTransport=None, fares: bool=None, postcodes: bool=None):  # noqa: E501
        """ResponseMapInfoFeatures - a model defined in Swagger

        :param public_transport: The public_transport of this ResponseMapInfoFeatures.  # noqa: E501
        :type public_transport: ResponseMapInfoFeaturesPublicTransport
        :param fares: The fares of this ResponseMapInfoFeatures.  # noqa: E501
        :type fares: bool
        :param postcodes: The postcodes of this ResponseMapInfoFeatures.  # noqa: E501
        :type postcodes: bool
        """
        self.swagger_types = {
            'public_transport': ResponseMapInfoFeaturesPublicTransport,
            'fares': bool,
            'postcodes': bool
        }

        self.attribute_map = {
            'public_transport': 'public_transport',
            'fares': 'fares',
            'postcodes': 'postcodes'
        }

        self._public_transport = public_transport
        self._fares = fares
        self._postcodes = postcodes

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseMapInfoFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseMapInfoFeatures of this ResponseMapInfoFeatures.  # noqa: E501
        :rtype: ResponseMapInfoFeatures
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_transport(self) -> ResponseMapInfoFeaturesPublicTransport:
        """Gets the public_transport of this ResponseMapInfoFeatures.


        :return: The public_transport of this ResponseMapInfoFeatures.
        :rtype: ResponseMapInfoFeaturesPublicTransport
        """
        return self._public_transport

    @public_transport.setter
    def public_transport(self, public_transport: ResponseMapInfoFeaturesPublicTransport):
        """Sets the public_transport of this ResponseMapInfoFeatures.


        :param public_transport: The public_transport of this ResponseMapInfoFeatures.
        :type public_transport: ResponseMapInfoFeaturesPublicTransport
        """

        self._public_transport = public_transport

    @property
    def fares(self) -> bool:
        """Gets the fares of this ResponseMapInfoFeatures.


        :return: The fares of this ResponseMapInfoFeatures.
        :rtype: bool
        """
        return self._fares

    @fares.setter
    def fares(self, fares: bool):
        """Sets the fares of this ResponseMapInfoFeatures.


        :param fares: The fares of this ResponseMapInfoFeatures.
        :type fares: bool
        """
        if fares is None:
            raise ValueError("Invalid value for `fares`, must not be `None`")  # noqa: E501

        self._fares = fares

    @property
    def postcodes(self) -> bool:
        """Gets the postcodes of this ResponseMapInfoFeatures.


        :return: The postcodes of this ResponseMapInfoFeatures.
        :rtype: bool
        """
        return self._postcodes

    @postcodes.setter
    def postcodes(self, postcodes: bool):
        """Sets the postcodes of this ResponseMapInfoFeatures.


        :param postcodes: The postcodes of this ResponseMapInfoFeatures.
        :type postcodes: bool
        """
        if postcodes is None:
            raise ValueError("Invalid value for `postcodes`, must not be `None`")  # noqa: E501

        self._postcodes = postcodes
