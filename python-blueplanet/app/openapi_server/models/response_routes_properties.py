# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from app.openapi_server.models.response_fares import ResponseFares  # noqa: F401,E501
from app.openapi_server.models.response_route import ResponseRoute  # noqa: F401,E501
from openapi_server import util


class ResponseRoutesProperties(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, travel_time: int=None, distance: int=None, fares: ResponseFares=None, route: ResponseRoute=None):  # noqa: E501
        """ResponseRoutesProperties - a model defined in Swagger

        :param travel_time: The travel_time of this ResponseRoutesProperties.  # noqa: E501
        :type travel_time: int
        :param distance: The distance of this ResponseRoutesProperties.  # noqa: E501
        :type distance: int
        :param fares: The fares of this ResponseRoutesProperties.  # noqa: E501
        :type fares: ResponseFares
        :param route: The route of this ResponseRoutesProperties.  # noqa: E501
        :type route: ResponseRoute
        """
        self.swagger_types = {
            'travel_time': int,
            'distance': int,
            'fares': ResponseFares,
            'route': ResponseRoute
        }

        self.attribute_map = {
            'travel_time': 'travel_time',
            'distance': 'distance',
            'fares': 'fares',
            'route': 'route'
        }

        self._travel_time = travel_time
        self._distance = distance
        self._fares = fares
        self._route = route

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseRoutesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseRoutesProperties of this ResponseRoutesProperties.  # noqa: E501
        :rtype: ResponseRoutesProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def travel_time(self) -> int:
        """Gets the travel_time of this ResponseRoutesProperties.


        :return: The travel_time of this ResponseRoutesProperties.
        :rtype: int
        """
        return self._travel_time

    @travel_time.setter
    def travel_time(self, travel_time: int):
        """Sets the travel_time of this ResponseRoutesProperties.


        :param travel_time: The travel_time of this ResponseRoutesProperties.
        :type travel_time: int
        """

        self._travel_time = travel_time

    @property
    def distance(self) -> int:
        """Gets the distance of this ResponseRoutesProperties.


        :return: The distance of this ResponseRoutesProperties.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance: int):
        """Sets the distance of this ResponseRoutesProperties.


        :param distance: The distance of this ResponseRoutesProperties.
        :type distance: int
        """

        self._distance = distance

    @property
    def fares(self) -> ResponseFares:
        """Gets the fares of this ResponseRoutesProperties.


        :return: The fares of this ResponseRoutesProperties.
        :rtype: ResponseFares
        """
        return self._fares

    @fares.setter
    def fares(self, fares: ResponseFares):
        """Sets the fares of this ResponseRoutesProperties.


        :param fares: The fares of this ResponseRoutesProperties.
        :type fares: ResponseFares
        """

        self._fares = fares

    @property
    def route(self) -> ResponseRoute:
        """Gets the route of this ResponseRoutesProperties.


        :return: The route of this ResponseRoutesProperties.
        :rtype: ResponseRoute
        """
        return self._route

    @route.setter
    def route(self, route: ResponseRoute):
        """Sets the route of this ResponseRoutesProperties.


        :param route: The route of this ResponseRoutesProperties.
        :type route: ResponseRoute
        """

        self._route = route
