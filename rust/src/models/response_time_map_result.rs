/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseTimeMapResult {
  #[serde(rename = "search_id")]
  search_id: String,
  #[serde(rename = "shapes")]
  shapes: Vec<::models::ResponseShape>,
  #[serde(rename = "properties")]
  properties: ::models::ResponseTimeMapProperties
}

impl ResponseTimeMapResult {
  pub fn new(search_id: String, shapes: Vec<::models::ResponseShape>, properties: ::models::ResponseTimeMapProperties) -> ResponseTimeMapResult {
    ResponseTimeMapResult {
      search_id: search_id,
      shapes: shapes,
      properties: properties
    }
  }

  pub fn set_search_id(&mut self, search_id: String) {
    self.search_id = search_id;
  }

  pub fn with_search_id(mut self, search_id: String) -> ResponseTimeMapResult {
    self.search_id = search_id;
    self
  }

  pub fn search_id(&self) -> &String {
    &self.search_id
  }


  pub fn set_shapes(&mut self, shapes: Vec<::models::ResponseShape>) {
    self.shapes = shapes;
  }

  pub fn with_shapes(mut self, shapes: Vec<::models::ResponseShape>) -> ResponseTimeMapResult {
    self.shapes = shapes;
    self
  }

  pub fn shapes(&self) -> &Vec<::models::ResponseShape> {
    &self.shapes
  }


  pub fn set_properties(&mut self, properties: ::models::ResponseTimeMapProperties) {
    self.properties = properties;
  }

  pub fn with_properties(mut self, properties: ::models::ResponseTimeMapProperties) -> ResponseTimeMapResult {
    self.properties = properties;
    self
  }

  pub fn properties(&self) -> &::models::ResponseTimeMapProperties {
    &self.properties
  }


}



