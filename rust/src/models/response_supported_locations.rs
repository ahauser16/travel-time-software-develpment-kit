/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseSupportedLocations {
  #[serde(rename = "locations")]
  locations: Vec<::models::ResponseSupportedLocation>,
  #[serde(rename = "unsupported_locations")]
  unsupported_locations: Vec<String>
}

impl ResponseSupportedLocations {
  pub fn new(locations: Vec<::models::ResponseSupportedLocation>, unsupported_locations: Vec<String>) -> ResponseSupportedLocations {
    ResponseSupportedLocations {
      locations: locations,
      unsupported_locations: unsupported_locations
    }
  }

  pub fn set_locations(&mut self, locations: Vec<::models::ResponseSupportedLocation>) {
    self.locations = locations;
  }

  pub fn with_locations(mut self, locations: Vec<::models::ResponseSupportedLocation>) -> ResponseSupportedLocations {
    self.locations = locations;
    self
  }

  pub fn locations(&self) -> &Vec<::models::ResponseSupportedLocation> {
    &self.locations
  }


  pub fn set_unsupported_locations(&mut self, unsupported_locations: Vec<String>) {
    self.unsupported_locations = unsupported_locations;
  }

  pub fn with_unsupported_locations(mut self, unsupported_locations: Vec<String>) -> ResponseSupportedLocations {
    self.unsupported_locations = unsupported_locations;
    self
  }

  pub fn unsupported_locations(&self) -> &Vec<String> {
    &self.unsupported_locations
  }


}



