/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseRoute {
  #[serde(rename = "departure_time")]
  departure_time: String,
  #[serde(rename = "arrival_time")]
  arrival_time: String,
  #[serde(rename = "parts")]
  parts: Vec<::models::ResponseRoutePart>
}

impl ResponseRoute {
  pub fn new(departure_time: String, arrival_time: String, parts: Vec<::models::ResponseRoutePart>) -> ResponseRoute {
    ResponseRoute {
      departure_time: departure_time,
      arrival_time: arrival_time,
      parts: parts
    }
  }

  pub fn set_departure_time(&mut self, departure_time: String) {
    self.departure_time = departure_time;
  }

  pub fn with_departure_time(mut self, departure_time: String) -> ResponseRoute {
    self.departure_time = departure_time;
    self
  }

  pub fn departure_time(&self) -> &String {
    &self.departure_time
  }


  pub fn set_arrival_time(&mut self, arrival_time: String) {
    self.arrival_time = arrival_time;
  }

  pub fn with_arrival_time(mut self, arrival_time: String) -> ResponseRoute {
    self.arrival_time = arrival_time;
    self
  }

  pub fn arrival_time(&self) -> &String {
    &self.arrival_time
  }


  pub fn set_parts(&mut self, parts: Vec<::models::ResponseRoutePart>) {
    self.parts = parts;
  }

  pub fn with_parts(mut self, parts: Vec<::models::ResponseRoutePart>) -> ResponseRoute {
    self.parts = parts;
    self
  }

  pub fn parts(&self) -> &Vec<::models::ResponseRoutePart> {
    &self.parts
  }


}



