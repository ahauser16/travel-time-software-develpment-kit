/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestRangeFull {
  #[serde(rename = "enabled")]
  enabled: bool,
  #[serde(rename = "max_results")]
  max_results: i32,
  #[serde(rename = "width")]
  width: i32
}

impl RequestRangeFull {
  pub fn new(enabled: bool, max_results: i32, width: i32) -> RequestRangeFull {
    RequestRangeFull {
      enabled: enabled,
      max_results: max_results,
      width: width
    }
  }

  pub fn set_enabled(&mut self, enabled: bool) {
    self.enabled = enabled;
  }

  pub fn with_enabled(mut self, enabled: bool) -> RequestRangeFull {
    self.enabled = enabled;
    self
  }

  pub fn enabled(&self) -> &bool {
    &self.enabled
  }


  pub fn set_max_results(&mut self, max_results: i32) {
    self.max_results = max_results;
  }

  pub fn with_max_results(mut self, max_results: i32) -> RequestRangeFull {
    self.max_results = max_results;
    self
  }

  pub fn max_results(&self) -> &i32 {
    &self.max_results
  }


  pub fn set_width(&mut self, width: i32) {
    self.width = width;
  }

  pub fn with_width(mut self, width: i32) -> RequestRangeFull {
    self.width = width;
    self
  }

  pub fn width(&self) -> &i32 {
    &self.width
  }


}



