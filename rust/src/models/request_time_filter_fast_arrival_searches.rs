/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestTimeFilterFastArrivalSearches {
  #[serde(rename = "many_to_one")]
  many_to_one: Option<Vec<::models::RequestTimeFilterFastArrivalManyToOneSearch>>,
  #[serde(rename = "one_to_many")]
  one_to_many: Option<Vec<::models::RequestTimeFilterFastArrivalOneToManySearch>>
}

impl RequestTimeFilterFastArrivalSearches {
  pub fn new() -> RequestTimeFilterFastArrivalSearches {
    RequestTimeFilterFastArrivalSearches {
      many_to_one: None,
      one_to_many: None
    }
  }

  pub fn set_many_to_one(&mut self, many_to_one: Vec<::models::RequestTimeFilterFastArrivalManyToOneSearch>) {
    self.many_to_one = Some(many_to_one);
  }

  pub fn with_many_to_one(mut self, many_to_one: Vec<::models::RequestTimeFilterFastArrivalManyToOneSearch>) -> RequestTimeFilterFastArrivalSearches {
    self.many_to_one = Some(many_to_one);
    self
  }

  pub fn many_to_one(&self) -> Option<&Vec<::models::RequestTimeFilterFastArrivalManyToOneSearch>> {
    self.many_to_one.as_ref()
  }

  pub fn reset_many_to_one(&mut self) {
    self.many_to_one = None;
  }

  pub fn set_one_to_many(&mut self, one_to_many: Vec<::models::RequestTimeFilterFastArrivalOneToManySearch>) {
    self.one_to_many = Some(one_to_many);
  }

  pub fn with_one_to_many(mut self, one_to_many: Vec<::models::RequestTimeFilterFastArrivalOneToManySearch>) -> RequestTimeFilterFastArrivalSearches {
    self.one_to_many = Some(one_to_many);
    self
  }

  pub fn one_to_many(&self) -> Option<&Vec<::models::RequestTimeFilterFastArrivalOneToManySearch>> {
    self.one_to_many.as_ref()
  }

  pub fn reset_one_to_many(&mut self) {
    self.one_to_many = None;
  }

}



