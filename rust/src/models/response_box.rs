/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseBox {
  #[serde(rename = "min_lat")]
  min_lat: f64,
  #[serde(rename = "max_lat")]
  max_lat: f64,
  #[serde(rename = "min_lng")]
  min_lng: f64,
  #[serde(rename = "max_lng")]
  max_lng: f64
}

impl ResponseBox {
  pub fn new(min_lat: f64, max_lat: f64, min_lng: f64, max_lng: f64) -> ResponseBox {
    ResponseBox {
      min_lat: min_lat,
      max_lat: max_lat,
      min_lng: min_lng,
      max_lng: max_lng
    }
  }

  pub fn set_min_lat(&mut self, min_lat: f64) {
    self.min_lat = min_lat;
  }

  pub fn with_min_lat(mut self, min_lat: f64) -> ResponseBox {
    self.min_lat = min_lat;
    self
  }

  pub fn min_lat(&self) -> &f64 {
    &self.min_lat
  }


  pub fn set_max_lat(&mut self, max_lat: f64) {
    self.max_lat = max_lat;
  }

  pub fn with_max_lat(mut self, max_lat: f64) -> ResponseBox {
    self.max_lat = max_lat;
    self
  }

  pub fn max_lat(&self) -> &f64 {
    &self.max_lat
  }


  pub fn set_min_lng(&mut self, min_lng: f64) {
    self.min_lng = min_lng;
  }

  pub fn with_min_lng(mut self, min_lng: f64) -> ResponseBox {
    self.min_lng = min_lng;
    self
  }

  pub fn min_lng(&self) -> &f64 {
    &self.min_lng
  }


  pub fn set_max_lng(&mut self, max_lng: f64) {
    self.max_lng = max_lng;
  }

  pub fn with_max_lng(mut self, max_lng: f64) -> ResponseBox {
    self.max_lng = max_lng;
    self
  }

  pub fn max_lng(&self) -> &f64 {
    &self.max_lng
  }


}



