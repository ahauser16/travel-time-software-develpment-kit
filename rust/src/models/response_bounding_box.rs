/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseBoundingBox {
  #[serde(rename = "envelope")]
  envelope: ::models::ResponseBox,
  #[serde(rename = "boxes")]
  boxes: Vec<::models::ResponseBox>
}

impl ResponseBoundingBox {
  pub fn new(envelope: ::models::ResponseBox, boxes: Vec<::models::ResponseBox>) -> ResponseBoundingBox {
    ResponseBoundingBox {
      envelope: envelope,
      boxes: boxes
    }
  }

  pub fn set_envelope(&mut self, envelope: ::models::ResponseBox) {
    self.envelope = envelope;
  }

  pub fn with_envelope(mut self, envelope: ::models::ResponseBox) -> ResponseBoundingBox {
    self.envelope = envelope;
    self
  }

  pub fn envelope(&self) -> &::models::ResponseBox {
    &self.envelope
  }


  pub fn set_boxes(&mut self, boxes: Vec<::models::ResponseBox>) {
    self.boxes = boxes;
  }

  pub fn with_boxes(mut self, boxes: Vec<::models::ResponseBox>) -> ResponseBoundingBox {
    self.boxes = boxes;
    self
  }

  pub fn boxes(&self) -> &Vec<::models::ResponseBox> {
    &self.boxes
  }


}



