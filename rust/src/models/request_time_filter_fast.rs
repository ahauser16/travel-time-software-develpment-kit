/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestTimeFilterFast {
  #[serde(rename = "locations")]
  locations: Vec<::models::RequestLocation>,
  #[serde(rename = "arrival_searches")]
  arrival_searches: ::models::RequestTimeFilterFastArrivalSearches
}

impl RequestTimeFilterFast {
  pub fn new(locations: Vec<::models::RequestLocation>, arrival_searches: ::models::RequestTimeFilterFastArrivalSearches) -> RequestTimeFilterFast {
    RequestTimeFilterFast {
      locations: locations,
      arrival_searches: arrival_searches
    }
  }

  pub fn set_locations(&mut self, locations: Vec<::models::RequestLocation>) {
    self.locations = locations;
  }

  pub fn with_locations(mut self, locations: Vec<::models::RequestLocation>) -> RequestTimeFilterFast {
    self.locations = locations;
    self
  }

  pub fn locations(&self) -> &Vec<::models::RequestLocation> {
    &self.locations
  }


  pub fn set_arrival_searches(&mut self, arrival_searches: ::models::RequestTimeFilterFastArrivalSearches) {
    self.arrival_searches = arrival_searches;
  }

  pub fn with_arrival_searches(mut self, arrival_searches: ::models::RequestTimeFilterFastArrivalSearches) -> RequestTimeFilterFast {
    self.arrival_searches = arrival_searches;
    self
  }

  pub fn arrival_searches(&self) -> &::models::RequestTimeFilterFastArrivalSearches {
    &self.arrival_searches
  }


}



