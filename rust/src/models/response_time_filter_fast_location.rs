/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseTimeFilterFastLocation {
  #[serde(rename = "id")]
  id: String,
  #[serde(rename = "properties")]
  properties: Vec<::models::ResponseTimeFilterFastProperties>
}

impl ResponseTimeFilterFastLocation {
  pub fn new(id: String, properties: Vec<::models::ResponseTimeFilterFastProperties>) -> ResponseTimeFilterFastLocation {
    ResponseTimeFilterFastLocation {
      id: id,
      properties: properties
    }
  }

  pub fn set_id(&mut self, id: String) {
    self.id = id;
  }

  pub fn with_id(mut self, id: String) -> ResponseTimeFilterFastLocation {
    self.id = id;
    self
  }

  pub fn id(&self) -> &String {
    &self.id
  }


  pub fn set_properties(&mut self, properties: Vec<::models::ResponseTimeFilterFastProperties>) {
    self.properties = properties;
  }

  pub fn with_properties(mut self, properties: Vec<::models::ResponseTimeFilterFastProperties>) -> ResponseTimeFilterFastLocation {
    self.properties = properties;
    self
  }

  pub fn properties(&self) -> &Vec<::models::ResponseTimeFilterFastProperties> {
    &self.properties
  }


}



