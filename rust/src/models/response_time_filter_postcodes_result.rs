/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseTimeFilterPostcodesResult {
  #[serde(rename = "search_id")]
  search_id: String,
  #[serde(rename = "postcodes")]
  postcodes: Vec<::models::ResponseTimeFilterPostcode>
}

impl ResponseTimeFilterPostcodesResult {
  pub fn new(search_id: String, postcodes: Vec<::models::ResponseTimeFilterPostcode>) -> ResponseTimeFilterPostcodesResult {
    ResponseTimeFilterPostcodesResult {
      search_id: search_id,
      postcodes: postcodes
    }
  }

  pub fn set_search_id(&mut self, search_id: String) {
    self.search_id = search_id;
  }

  pub fn with_search_id(mut self, search_id: String) -> ResponseTimeFilterPostcodesResult {
    self.search_id = search_id;
    self
  }

  pub fn search_id(&self) -> &String {
    &self.search_id
  }


  pub fn set_postcodes(&mut self, postcodes: Vec<::models::ResponseTimeFilterPostcode>) {
    self.postcodes = postcodes;
  }

  pub fn with_postcodes(mut self, postcodes: Vec<::models::ResponseTimeFilterPostcode>) -> ResponseTimeFilterPostcodesResult {
    self.postcodes = postcodes;
    self
  }

  pub fn postcodes(&self) -> &Vec<::models::ResponseTimeFilterPostcode> {
    &self.postcodes
  }


}



