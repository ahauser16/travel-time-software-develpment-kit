/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseTimeFilterPostcodeDistrictsResult {
  #[serde(rename = "search_id")]
  search_id: String,
  #[serde(rename = "districts")]
  districts: Vec<::models::ResponseTimeFilterPostcodeDistrict>
}

impl ResponseTimeFilterPostcodeDistrictsResult {
  pub fn new(search_id: String, districts: Vec<::models::ResponseTimeFilterPostcodeDistrict>) -> ResponseTimeFilterPostcodeDistrictsResult {
    ResponseTimeFilterPostcodeDistrictsResult {
      search_id: search_id,
      districts: districts
    }
  }

  pub fn set_search_id(&mut self, search_id: String) {
    self.search_id = search_id;
  }

  pub fn with_search_id(mut self, search_id: String) -> ResponseTimeFilterPostcodeDistrictsResult {
    self.search_id = search_id;
    self
  }

  pub fn search_id(&self) -> &String {
    &self.search_id
  }


  pub fn set_districts(&mut self, districts: Vec<::models::ResponseTimeFilterPostcodeDistrict>) {
    self.districts = districts;
  }

  pub fn with_districts(mut self, districts: Vec<::models::ResponseTimeFilterPostcodeDistrict>) -> ResponseTimeFilterPostcodeDistrictsResult {
    self.districts = districts;
    self
  }

  pub fn districts(&self) -> &Vec<::models::ResponseTimeFilterPostcodeDistrict> {
    &self.districts
  }


}



