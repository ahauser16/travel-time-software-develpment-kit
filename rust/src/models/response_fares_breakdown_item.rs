/* 
 * TravelTime Platform API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@igeolise.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ResponseFaresBreakdownItem {
  #[serde(rename = "modes")]
  modes: Vec<::models::ResponseTransportationMode>,
  #[serde(rename = "route_part_ids")]
  route_part_ids: Vec<i32>,
  #[serde(rename = "tickets")]
  tickets: Vec<::models::ResponseFareTicket>
}

impl ResponseFaresBreakdownItem {
  pub fn new(modes: Vec<::models::ResponseTransportationMode>, route_part_ids: Vec<i32>, tickets: Vec<::models::ResponseFareTicket>) -> ResponseFaresBreakdownItem {
    ResponseFaresBreakdownItem {
      modes: modes,
      route_part_ids: route_part_ids,
      tickets: tickets
    }
  }

  pub fn set_modes(&mut self, modes: Vec<::models::ResponseTransportationMode>) {
    self.modes = modes;
  }

  pub fn with_modes(mut self, modes: Vec<::models::ResponseTransportationMode>) -> ResponseFaresBreakdownItem {
    self.modes = modes;
    self
  }

  pub fn modes(&self) -> &Vec<::models::ResponseTransportationMode> {
    &self.modes
  }


  pub fn set_route_part_ids(&mut self, route_part_ids: Vec<i32>) {
    self.route_part_ids = route_part_ids;
  }

  pub fn with_route_part_ids(mut self, route_part_ids: Vec<i32>) -> ResponseFaresBreakdownItem {
    self.route_part_ids = route_part_ids;
    self
  }

  pub fn route_part_ids(&self) -> &Vec<i32> {
    &self.route_part_ids
  }


  pub fn set_tickets(&mut self, tickets: Vec<::models::ResponseFareTicket>) {
    self.tickets = tickets;
  }

  pub fn with_tickets(mut self, tickets: Vec<::models::ResponseFareTicket>) -> ResponseFaresBreakdownItem {
    self.tickets = tickets;
    self
  }

  pub fn tickets(&self) -> &Vec<::models::ResponseFareTicket> {
    &self.tickets
  }


}



