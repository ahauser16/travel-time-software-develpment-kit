{-
   TravelTime Platform API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 1.0.0
   Contact: support@igeolise.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ResponseRoutesProperties exposing (ResponseRoutesProperties, decoder, encode, encodeWithTag, toString)

import Data.ResponseFares as ResponseFares exposing (ResponseFares)
import Data.ResponseRoute as ResponseRoute exposing (ResponseRoute)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ResponseRoutesProperties =
    { travelTime : Maybe (Int)
    , distance : Maybe (Int)
    , fares : Maybe (ResponseFares)
    , route : Maybe (ResponseRoute)
    }


decoder : Decoder ResponseRoutesProperties
decoder =
    Decode.succeed ResponseRoutesProperties
        |> optional "travel_time" (Decode.nullable Decode.int) Nothing
        |> optional "distance" (Decode.nullable Decode.int) Nothing
        |> optional "fares" (Decode.nullable ResponseFares.decoder) Nothing
        |> optional "route" (Decode.nullable ResponseRoute.decoder) Nothing



encode : ResponseRoutesProperties -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ResponseRoutesProperties -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ResponseRoutesProperties -> List (String, Encode.Value)
encodePairs model =
    [ ( "travel_time", Maybe.withDefault Encode.null (Maybe.map Encode.int model.travelTime) )
    , ( "distance", Maybe.withDefault Encode.null (Maybe.map Encode.int model.distance) )
    , ( "fares", Maybe.withDefault Encode.null (Maybe.map ResponseFares.encode model.fares) )
    , ( "route", Maybe.withDefault Encode.null (Maybe.map ResponseRoute.encode model.route) )
    ]



toString : ResponseRoutesProperties -> String
toString =
    Encode.encode 0 << encode




