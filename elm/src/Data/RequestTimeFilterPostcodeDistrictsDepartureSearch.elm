{-
   TravelTime Platform API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI spec version: 1.0.0
   Contact: support@igeolise.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.RequestTimeFilterPostcodeDistrictsDepartureSearch exposing (RequestTimeFilterPostcodeDistrictsDepartureSearch, decoder, encoder)

import Data.RequestTransportation as RequestTransportation exposing (RequestTransportation)
import DateTime exposing (DateTime)
import Data.RequestTimeFilterPostcodeDistrictsProperty as RequestTimeFilterPostcodeDistrictsProperty exposing (RequestTimeFilterPostcodeDistrictsProperty)
import Data.RequestRangeFull as RequestRangeFull exposing (RequestRangeFull)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias RequestTimeFilterPostcodeDistrictsDepartureSearch =
    { id : String
    , transportation : RequestTransportation
    , travelTime : Int
    , departureTime : DateTime
    , reachablePostcodesThreshold : Float
    , properties : (List RequestTimeFilterPostcodeDistrictsProperty)
    , range : Maybe (RequestRangeFull)
    }


decoder : Decoder RequestTimeFilterPostcodeDistrictsDepartureSearch
decoder =
    Decode.succeed RequestTimeFilterPostcodeDistrictsDepartureSearch
        |> required "id" Decode.string
        |> required "transportation" RequestTransportation.decoder
        |> required "travel_time" Decode.int
        |> required "departure_time" DateTime.decoder
        |> required "reachable_postcodes_threshold" Decode.float
        |> required "properties" (Decode.list RequestTimeFilterPostcodeDistrictsProperty.decoder)
        |> optional "range" (Decode.nullable RequestRangeFull.decoder) Nothing



encoder : RequestTimeFilterPostcodeDistrictsDepartureSearch -> Encode.Value
encoder model =
    Encode.object
        [ ( "id", Encode.string model.id )
        , ( "transportation", RequestTransportation.encoder model.transportation )
        , ( "travel_time", Encode.int model.travelTime )
        , ( "departure_time", DateTime.encoder model.departureTime )
        , ( "reachable_postcodes_threshold", Encode.float model.reachablePostcodesThreshold )
        , ( "properties", (Encode.list RequestTimeFilterPostcodeDistrictsProperty.encoder) model.properties )
        , ( "range", Maybe.withDefault Encode.null (Maybe.map RequestRangeFull.encoder model.range) )

        ]


