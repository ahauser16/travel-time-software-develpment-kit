{-
   TravelTime Platform API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 1.0.0
   Contact: support@igeolise.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ResponseGeocodingGeoJsonFeature exposing (ResponseGeocodingGeoJsonFeature, decoder, encode, encodeWithTag, toString)

import Data.ResponseGeocodingGeometry as ResponseGeocodingGeometry exposing (ResponseGeocodingGeometry)
import Data.ResponseGeocodingProperties as ResponseGeocodingProperties exposing (ResponseGeocodingProperties)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ResponseGeocodingGeoJsonFeature =
    { type_ : String
    , geometry : ResponseGeocodingGeometry
    , properties : ResponseGeocodingProperties
    }


decoder : Decoder ResponseGeocodingGeoJsonFeature
decoder =
    Decode.succeed ResponseGeocodingGeoJsonFeature
        |> required "type" Decode.string
        |> required "geometry" ResponseGeocodingGeometry.decoder
        |> required "properties" ResponseGeocodingProperties.decoder



encode : ResponseGeocodingGeoJsonFeature -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ResponseGeocodingGeoJsonFeature -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ResponseGeocodingGeoJsonFeature -> List (String, Encode.Value)
encodePairs model =
    [ ( "type", Encode.string model.type_ )
    , ( "geometry", ResponseGeocodingGeometry.encode model.geometry )
    , ( "properties", ResponseGeocodingProperties.encode model.properties )
    ]



toString : ResponseGeocodingGeoJsonFeature -> String
toString =
    Encode.encode 0 << encode




