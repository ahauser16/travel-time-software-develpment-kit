{-
   TravelTime Platform API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 1.0.0
   Contact: support@igeolise.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ResponseGeocodingGeometry exposing (ResponseGeocodingGeometry, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ResponseGeocodingGeometry =
    { type_ : String
    , coordinates : (List Float)
    }


decoder : Decoder ResponseGeocodingGeometry
decoder =
    Decode.succeed ResponseGeocodingGeometry
        |> required "type" Decode.string
        |> required "coordinates" (Decode.list Decode.float)



encode : ResponseGeocodingGeometry -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ResponseGeocodingGeometry -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ResponseGeocodingGeometry -> List (String, Encode.Value)
encodePairs model =
    [ ( "type", Encode.string model.type_ )
    , ( "coordinates", (Encode.list Encode.float) model.coordinates )
    ]



toString : ResponseGeocodingGeometry -> String
toString =
    Encode.encode 0 << encode




